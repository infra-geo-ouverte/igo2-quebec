{"version":3,"file":"main.30522392607841c3.js","mappings":"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ACA,gBACA,mBACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,gBACA,mBACA,gBACA,mBACA,eACA,kBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,cACA,iBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,mBACA,gBACA,WACA,cACA,aACA,gBACA,aACA,gBACA,YACA,eACA,mBACA,sBACA,kBACA,qBACA,aACA,gBACA,aACA,gBACA,WACA,cACA,aACA,gBACA,aACA,gBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,iBACA,oBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,mBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,kBACA,qBACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,cACA,iBACA,aACA,gBACA,aACA,gBACA,aACA,gBACA,gBACA,mBACA,cACA,iBACA,aACA,gBACA,cACA,iBACA,cACA,kBACA,qBACA,iBACA,gBACA,mBACA,aACA,gBACA,aACA,gBACA,aACA,kBACA,qBACA,gBACA,aACA,gBACA,mBACA,sBACA,aACA,gBACA,gBACA,mBACA,gBACA,mBACA,gBACA,mBACA,gBACA,oBAIA,cACA,WACA,WACA,CACA,cACA,cACA,8CACA,gCACA2D,CACA,CACA,WACA,CACA0qB,kBACA,qBACA,EACAA,YACAC,YACAD","names":["HomeComponent","constructor","selectors","core","AboutComponent","SearchState","searchSourceService","storageService","configService","this","BehaviorSubject","igo2_common","searchOverlayStyle","markerColor","markerOpacity","markerOutlineColor","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWidth","searchOverlayStyleSelection","searchOverlayStyleFocus","searchResultsGeometryEnabled","get","searchResultsGeometryEnabled$","next","store","addStrategy","createCustomFilterTermStrategy","searchTypes","getEnabledSources","map","source","type","filterClauseFunc","record","entity","meta","score","activateCustomFilterTermStrategy","strategy","getStrategyOfType","activate","deactivateCustomFilterTermStrategy","deactivate","enableSearch","searchDisabled$","disableSearch","setSearchTerm","searchTerm","searchTerm$","setSearchType","searchType","enableSourcesByType","searchType$","setSelectedResult","result","selectedResult$","setSearchResultsGeometryStatus","value","set","factory","PwaService","updates","languageService","confirmDialogService","isEnabled","handleVersionUpdates","checkForUpdates","interval","pipe","skip","subscribe","__awaiter","updateFound","checkForUpdate","console","log","err","error","modalUpdatePWA","confirmOpened","message","translate","instant","open","tap","confirm","window","navigator","onLine","document","location","reload","alert","setTimeout","versionUpdates","evt","version","hash","currentVersion","latestVersion","FooterComponent","MapOverlayComponent","contextService","mediaService","ngAfterViewInit","context$$","context$","context","handleContextChange","media$$","media$","media","ngOnDestroy","unsubscribe","mapOverlay","getConfig","overlay","getMedia","includes","push","SearchResultsToolComponent","mapState","searchState","elRef","toolState","directionState","queryState","GeoJSON","hasFeatureEmphasisOnSelection","addFeaturetoLayer","featureTitle","feature","feature$","stateView","firstBy$","e","state","focused","element","data","termSplitter","searchTermSplitter$","searchStore","mapQueryClick","_mapQueryClick","searchInit","_searchInit","legendPanelOpened","_legendPanelOpened","queryStore","ngOnInit","initialized","searchTerm$$","term","focusedOrResolution$$","combineLatest","focusedResult$","viewController","resolution$","bunch","buildResultEmphasis","selectedOrResolution$$","monitorResultOutOfView","showResultsGeometries$$","all$","searchResults","clearFeatureEmphasis","shownResultsGeometries","queryResultsOverlay","removeFeature","filter","dataType","igo2_geo","geometry","selected","style","Object","assign","_a","base","addFeature","debouncedEmpty$$","empty$","debounceTime","empty","debouncedEmpty$","isSelectedResultOutOfView$$","state$","selectedResult","selectedOlFeature","projection","selectedOlFeatureExtent","isSelectedResultOutOfView$","trigger","olGeometry","getGeometry","getExtent","extent","x","y","feature1","Feature","name","Point","abstractResult","computedStyle","zIndexOffset","focus","_b","_c","selection","setZIndex","searchResultsOverlay","abstractFocusedResult","abstractSelectedResult","shownResultsEmphasisGeometries","shownResult","getRoute$$","onResultFocus","dataSource","ol","getFeatureById","id","setStyle","featureSelected","emit","onResultUnfocus","onResultSelect","clear","tryAddFeatureToMap","onSearch","event","softClear","results","updateAll","newResults","entities$","research","concat","updateMany","igoList","nativeElement","querySelector","moreResults","request","getId","isScrolledIntoView","scrollTop","offsetTop","offsetHeight","clientHeight","computeElementRef","items","getElementsByTagName","selectedItem","i","length","className","adjustTopPanel","elemSource","elem","children","zoomToFeatureExtent","localOlFeature","format","readFeature","dataProjection","featureProjection","docViewTop","docViewBottom","elemTop","getRoute","stopsStore","clearStops","routingCoordLoaded","storeInitialized$","init","stop","all","find","position","coord","coordinates","point","es","text","update","geolocationController","position$","currentPos","currentCoord","ol_proj","join","ctx","__decorate","title","icon","igo2_integration","igo2_core","FeatureDetailsComponent","cdRef","networkService","http","messageService","Subject","currentState","takeUntil","unsubscribe$","_source","detectChanges","_feature","selectFeature","ready","properties","mapQuery","complete","formatReading","reading","toString","replace","isObject","isDoc","isUrl","test","toLowerCase","isImg","isEmbeddedLink","matchRegex","match","openSecureUrl","url","regexDepot","RegExp","responseType","docOrImage","fileUrl","URL","createObjectURL","div","createElement","innerHTML","getAttribute","getEmbeddedLinkText","filterFeatureProperties","allowedFieldsAndAlias","alias","Route","keys","forEach","field","connection","excludeAttribute","attribute","excludeAttributeOffline","copyTextToClipboard","igo2_utils","success","FeatureDetailsCustomComponent","mobile","_mobile","tooltipPosition","matTooltipPosition","FeatureInfoComponent","storageState","customFeatureTitle","customFeatureDetails","_map","_store","displayStyle","selectResult","onEscapeHandler","clearButton","mapQueryInit","_mapQueryInit","resultSelected$","resultOrResolution$$","onTitleClick","closeQuery","features","queryOverlayStyleSelection","queryOverlayStyle","getTitle","removeFeatures","addFeatures","isResultSelected$","unselectResult","setFeatures","panelOpened","mapQueryFromFeatureDetails","SidePanelComponent","opened","_opened","openedChange","layers","_layers","entities","clearSearch","closePanelOnCloseQuery","destroy","clearQuery","propertyChange$","selectedFeature","layer","removeFeatureFromMap","closePanelLegend","closeLegend","panelOpenedFromFeature","mapQueryFromFeature","$event","BottomPanelComponent","mapService","searchService","setMap","showSearchBar","zoomAuto","_term","pageIterator","_zoomAuto","zoomAuto$","latestResult","closePanel","forceCoordsNA","openPanel","mapLayersShownInLegend","showInLayerList","res","onPointerSummaryStatusChange","igoSearchPointerSummaryEnabled","onSearchTermChange","clearedSearchbar","trim","onSearchCoordinate","reverseSearch","lonlat","_results","onSearchBarClick","panelOpenState","stopPropagation","clearSearchBar","LegendDialogComponent","layers$","LegendButtonComponent","dialog","toggleLegendButton","legendInPanel","getDialogById","legendButtonTooltip","dialogRef","close","hasBackdrop","closeOnNavigation","toggleLegend","PortalComponent","route","workspaceState","authService","layerService","dataSourceService","capabilitiesService","contextState","importService","dialogWindow","queryService","breakpointObserver","pwaService","analyticsService","pageSize","pageSizeOptions","layout","observe","mobileBreakPoint","distinctUntilChanged","hasFooter","hasLegendButton","hasSideSearch","hasHomeExtentButton","hasGeolocateButton","showRotationButtonIfNoRotation","getBaseLayersUseStaticIcon","auth","isMobile","isTablet","isLandscape","getOrientation","isPortrait","backdropShown","expansionPanelExpanded","workspacePanelExpanded","setPadding","bottom","workspace","workspace$","actionbarMode","actionbarWithTitle","workspaceStore","defaultFeatureCount","IGO","once","readQueryParams","tracking","authenticate$","authenticated","contextLoaded","queryParams","params","readLanguageParam","onChangeContext","contextActions","handler","searchCoordinate","contextMenuCoord","openGoogleMaps","openGoogleStreetView","contextMenuStore","load","closePanels","trackSearch","count","openPanelonQuery","breakpoint$","breakpointChanged","ngAfterContentInit","setInitialState","toggleDialogLegend","legendDialogOpened","openPanelLegend","openPanels","onClearQuery","isMatched","currentBreakpoint","createFeatureProperties","options","sourceOptions","sourceFields","primary","visible","entitySortChange","workspaceEntitySortChange$","workspaceMaximize$$","f","layers$$","getQuerySearchSource","getSources","searchSource","getFeatureIsSameActiveWks","sourceTitle","getWksActiveOpenInResolution","activeWks","active","inResolutionRange$","onMapQuery","querySearchSourceArray","clearSearchbarterm","filteredResults","querySearchSource","s","getLayerWksOptionMapQuery","of","queryResults","cancelOngoingAddLayer","addedLayers$$","sub","onBackdropClick","routeParams","search","onBeforeSearch","searchBar","setTerm","isReverseSearch","enabledSources","computeHomeExtentValues","view","homeExtent","homeCenter","center","homeZoom","zoom","entityStore","qParams","uri","readLayersQueryParams","searchBarTerm","onContextMenuOpen","getClickCoordinate","contextmenuPoint","boundingMapBrowser","mapBrowser","getBoundingClientRect","top","scrollY","pageYOffset","left","scrollX","pageXOffset","pixel","getCoordinateFromPixel","proj","c","toFixed","readSearchParams","readFocusFirst","computeZoomToExtent","lang","languageForce","setLanguage","zoomExtent","extentParams","split","olExtent","zoomToExtent","getControlsOffsetY","workspaceMaximize$","computeFocusFirst","resultItem","item","click","sf","termDefinedInUrl","entities$$","skipWhile","take","termDefinedInUrlTriggered","exactMatch","searchResultsOlFeatures","totalExtent","searchGeom","readLayersQueryParamsByType","readVectorQueryParams","getQueryParam","paramValue","fromString","nameParamLayersKey","urlsKey","wmsLayers","wmsUrl","wmtsLayers","wmtsUrl","arcgisLayers","arcgisUrl","iarcgisLayers","iarcgisUrl","tarcgisLayers","tarcgisUrl","layersByService","urls","cnt","urlSrc","extractLayersByService","layerFromUrl","layerOptions","LAYERS","visibility","computeLayerVisibilityFromUrl","addLayerFromURL","parseInt","vector","lastIndex","lastIndexOf","fileName","slice","file","File","lastModified","Date","now","import","onFileImportSuccess","onFileImportError","outLayersByService","startsWith","substr","endsWith","zIndex","commonSourceOptions","optionsFromCapabilities","optionsFromApi","crossOrigin","arcgisClause","queryable","queryFormat","VERSION","createAsyncLayer","l","addLayer","currentLayerid","visibleOnLayersParams","visibleOffLayersParams","visiblelayers","invisiblelayers","indexOf","controlsAnimations","fesm2015_animations","controlSlideX","controlSlideY","MapComponent","hasHeader","routes","path","component","MenuRoutingModule","router","onSameUrlNavigation","relativeLinkResolution","HeaderModule","common","toolbar","FooterModule","LegendDialogModule","fesm2015_button","tooltip","LegendButtonModule","MapOverlayModule","IgoAppSearchResultsToolModule","badge","IgoFeatureDetailsModule","IgoFeatureModule","AppFeatureInfoModule","AppPanelsModule","sidenav","igo2_context","card","expansion","PortalModule","MenuModule","environment","production","igo","app","install","enabled","promote","manifestPath","pwa","language","prefix","searchSources","available","nominatim","storedqueries","icherche","searchUrl","order","limit","settings","showInPointerSummary","coordinatesreverse","icherchereverse","ilayer","projections","code","def","HeaderComponent","computeHeader","headerLogo","headerLogoPrint","MenuComponent","AppComponent","renderer","titleService","metaService","readTitleConfig","readThemeConfig","readDescriptionConfig","detectOldBrowser","hasMenu","setManifest","installPrompt","setTitle","addTag","content","appConfig","setAttribute","addEventListener","preventDefault","promptEvent","prompt","theme","themeClass","addClass","body","description","ie","chrome","firefox","safari","timeOut","AppModule","bootstrap","default","provide","useFactory","appInitializerFactory","injector","applicationRef","Promise","resolve","isStable","first","concatMap","getLanguage","getTranslation","translations","setTranslation","deps","multi","useValue","showDelay","hideDelay","touchendHideDelay","disableTooltipInteractivity","imports","platform_browser","animations","service_worker","registrationStrategy","bootstrapModule","catch","webpackContext","module"],"sourceRoot":"webpack:///","sources":["./src/app/pages/menu/menu-pages/home/home.component.ts","./src/app/pages/menu/menu-pages/home/home.component.html","./src/app/pages/menu/menu-pages/about/about.component.ts","./src/app/pages/menu/menu-pages/about/about.component.html","./src/app/pages/portal/panels/search-results-tool/search.state.ts","./src/app/services/pwa.service.ts","./src/app/pages/footer/footer.component.ts","./src/app/pages/footer/footer.component.html","./src/app/pages/portal/map-overlay/map-overlay.component.html","./src/app/pages/portal/map-overlay/map-overlay.component.ts","./src/app/pages/portal/panels/search-results-tool/search-results-tool.component.html","./src/app/pages/portal/panels/search-results-tool/search-results-tool.component.ts","./src/app/pages/portal/panels/feature/feature-details/feature-details.component.html","./src/app/pages/portal/panels/feature/feature-details/feature-details.component.ts","./src/app/pages/portal/panels/feature/feature-details/feature-details-custom.component.html","./src/app/pages/portal/panels/feature/feature-details/feature-details-custom.component.ts","./src/app/pages/portal/panels/feature/feature-info/feature-info.component.html","./src/app/pages/portal/panels/feature/feature-info/feature-info.component.ts","./src/app/pages/portal/panels/sidepanel/sidepanel.component.html","./src/app/pages/portal/panels/sidepanel/sidepanel.component.ts","./src/app/pages/portal/panels/bottompanel/bottompanel.component.html","./src/app/pages/portal/panels/bottompanel/bottompanel.component.ts","./src/app/pages/portal/legend-dialog/legend-dialog.component.ts","./src/app/pages/portal/legend-dialog/legend-dialog.component.html","./src/app/pages/portal/legend-button/legend-button.component.ts","./src/app/pages/portal/legend-button/legend-button.component.html","./src/app/pages/portal/portal.component.html","./src/app/pages/portal/portal.component.ts","./src/app/pages/portal/portal.animation.ts","./src/app/pages/menu/menu-pages/map/map.component.ts","./src/app/pages/menu/menu-pages/map/map.component.html","./src/app/pages/menu/menu-routing/menu-routing.module.ts","./src/app/pages/header/header.module.ts","./src/app/pages/footer/footer.module.ts","./src/app/pages/portal/legend-dialog/legend-dialog.module.ts","./src/app/pages/portal/legend-button/legend-button.module.ts","./src/app/pages/portal/map-overlay/map-overlay.module.ts","./src/app/pages/portal/panels/search-results-tool/search-results-tool.module.ts","./src/app/pages/portal/panels/feature/feature-details/feature-details.module.ts","./src/app/pages/portal/panels/feature/feature.module.ts","./src/app/pages/portal/panels/feature/feature-info/feature-info.module.ts","./src/app/pages/portal/panels/panels.module.ts","./src/app/pages/portal/portal.module.ts","./src/app/pages/menu/menu.module.ts","./src/environments/environment.github.ts","./src/app/pages/header/header.component.ts","./src/app/pages/header/header.component.html","./src/app/pages/menu/menu.component.ts","./src/app/pages/menu/menu.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/main.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {\n  getHomeComponent: any;\n\n  constructor() { }\n\n}\n","<div class=\"page\">\n    <div class=\"row\">\n        <h1 class=\"d-block themeTitre\">Accueil</h1>\n        <h2>Infrastructure géomatique ouverte 2.0 (IGO2) / Open GIS Infrastructure 2.0</h2>\n        <h4>Qu'est-ce qu'IGO?</h4>\n        <p>IGO2 est une solution Web gratuite en géomatique basée sur Angular - Material, OpenLayers et IGO2lib. IGO2 permet de tirer profit d’une multitude de données géographiques grâce à une interface cartographique accessible par un navigateur Web sur un poste de travail et par un appareil mobile. IGO2 a été initié par l'administration publique du Québec (Canada) et issu d’un travail collaboratif basé sur la philosophie des logiciels libres et ouverts (« open source »). Les membres du public en géomatique et du Web qui soumettent des contributions conservent leurs droits d'auteur s'ils partagent leur code source selon la LICENCE LiLiQ-R de type LGPL.</p>\n        <p style=\"display:inline;\">Téléchargement et code source : <a style=\"display:inline;\" href=\"https://github.com/infra-geo-ouverte/igo2\" target=\"_blank\" rel=\"noreferrer\">https://github.com/infra-geo-ouverte/igo2<!--img class=\"linkExtImg\" src=\"../../../../../assets/images/lien-externe.svg\" alt=\"Cet hyperlien s'ouvrira dans une nouvelle fenêtre.\"--></a></p>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html'\n})\nexport class AboutComponent {\n\n  constructor() { }\n\n}\n","<div class=\"row\">\n    <div class=\"container-fluid page\">\n        <h1 class=\"d-block themeTitre\">En savoir plus</h1>\n        <h2>Notre Mission</h2>\n\n        <h3>Mission 1</h3>\n        <p>Paragraphe : Lorem ipsum dolor sit amet, consectetur adipiscing elit. Tu enim ista lenius, hic Stoicorum more nos vexat. Quo studio Aristophanem putamus aetatem in litteris duxisse? Honesta oratio, Socratica, Platonis etiam. Vitiosum est enim in dividendo partem in genere numerare. <i>Non est igitur voluptas bonum.</i> Duo Reges: constructio interrete. Non autem hoc: igitur ne illud quidem. <b>Magna laus.</b> <b>Quis istum dolorem timet?</b> Quod autem satis est, eo quicquid accessit, nimium est; <b>Sed ille, ut dixi, vitiose.</b> </p>\n\n        <p>Cur tantas regiones barbarorum pedibus obiit, tot maria transmisit? <a href=\"http://loripsum.net/\" target=\"_blank\">Nulla erit controversia.</a> Prave, nequiter, turpiter cenabat; <code>Multoque hoc melius nos veriusque quam Stoici.</code> Contineo me ab exemplis. <b>Sed nimis multa.</b> <code>Nos vero, inquit ille;</code> <mark>Occultum facinus esse potuerit, gaudebit;</mark> </p>\n\n        <ul>\n            <li>Iam doloris medicamenta illa Epicurea tamquam de narthecio proment: Si gravis, brevis;</li>\n            <li>Ergo et avarus erit, sed finite, et adulter, verum habebit modum, et luxuriosus eodem modo.</li>\n            <li>Sedulo, inquam, faciam.</li>\n            <li>Quid enim tanto opus est instrumento in optimis artibus comparandis?</li>\n            <li>Sic, et quidem diligentius saepiusque ista loquemur inter nos agemusque communiter.</li>\n        </ul>\n\n\n        <p><b> Bold Inde igitur, inquit, ordiendum est.</b> Quis hoc dicit? Quamquam te quidem video minime esse deterritum. <i>Bonum incolumis acies: misera caecitas.</i> Indicant pueri, in quibus ut in speculis natura cernitur. Duae sunt enim res quoque, ne tu verba solum putes. <code>Est enim effectrix multarum et magnarum voluptatum.</code> </p>\n\n        <pre> Pre Corporis igitur nostri partes totaque figura et forma et\n        statura quam apta ad naturam sit, apparet, neque est dubium,\n        quin frons, oculi, aures et reliquae partes quales propriae\n        sint hominis intellegatur.\n\n        Pungunt quasi aculeis interrogatiunculis angustis, quibus\n        etiam qui assentiuntur nihil commutantur animo et idem\n        abeunt, qui venerant.\n        </pre>\n\n\n        <ol>\n            <li>Atqui perspicuum est hominem e corpore animoque constare, cum primae sint animi partes, secundae corporis.</li>\n            <li>Nonne videmus quanta perturbatio rerum omnium consequatur, quanta confusio?</li>\n        </ol>\n\n\n        <dl>\n            <dt><dfn>Stoicos roga.</dfn></dt>\n            <dd>Quid enim de amicitia statueris utilitatis causa expetenda vides.</dd>\n            <dt><dfn>Qui convenit?</dfn></dt>\n            <dd>Que Manilium, ab iisque M.</dd>\n            <dt><dfn>Paria sunt igitur.</dfn></dt>\n            <dd>Quamquam ab iis philosophiam et omnes ingenuas disciplinas habemus;</dd>\n            <dt><dfn>Confecta res esset.</dfn></dt>\n            <dd>Cupiditates non Epicuri divisione finiebat, sed sua satietate.</dd>\n        </dl>\n    </div>\n</div>","import { Injectable } from '@angular/core';\n\nimport { EntityRecord, EntityStore, EntityStoreFilterCustomFuncStrategy, EntityStoreStrategyFuncOptions } from '@igo2/common';\nimport { ConfigService, StorageService } from '@igo2/core';\nimport { SearchResult, SearchSourceService, SearchSource, CommonVectorStyleOptions } from '@igo2/geo';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\n/**\n * Service that holds the state of the search module\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchState {\n  public searchOverlayStyle: CommonVectorStyleOptions = {};\n  public searchOverlayStyleSelection: CommonVectorStyleOptions = {};\n  public searchOverlayStyleFocus: CommonVectorStyleOptions = {};\n\n  public focusedOrResolution$$: Subscription;\n  public selectedOrResolution$$: Subscription;\n\n  readonly searchTermSplitter$: BehaviorSubject<string> = new BehaviorSubject('|');\n\n  readonly searchTerm$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly searchType$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly searchDisabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  readonly searchResultsGeometryEnabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  readonly selectedResult$: BehaviorSubject<SearchResult> = new BehaviorSubject(undefined);\n\n  /**\n   * Store that holds the search results\n   */\n  readonly store: EntityStore<SearchResult> = new EntityStore<SearchResult>([]);\n\n  /**\n   * Search types currently enabled in the search source service\n   */\n  get searchTypes(): string[] {\n    return this.searchSourceService\n      .getEnabledSources()\n      .map((source: SearchSource) => (source.constructor as any).type);\n  }\n\n  constructor(\n    private searchSourceService: SearchSourceService,\n    private storageService: StorageService,\n    private configService: ConfigService) {\n      this.searchOverlayStyle = {\n        markerColor: '#45D7E6', // marker fill\n        markerOpacity: 0.8, // marker opacity not applied if a rgba markerColor is provided\n        markerOutlineColor: '#ffffff', // marker contour\n        fillColor: 'transparent', // poly\n        fillOpacity: 0, // poly fill opacity not applied if a rgba fillColor is provided\n        strokeColor: '#45D7E6', // line and poly\n        strokeOpacity: 0.7, // line and poly not applied if a rgba strokeColor is provided\n        strokeWidth: 4 // line and poly\n      };\n      this.searchOverlayStyleSelection = {\n        markerColor: '#45D7E6', // marker fill\n        markerOpacity: 1, // marker opacity not applied if a rgba markerColor is provided\n        markerOutlineColor: '#ffffff', // marker contour\n        fillColor: 'transparent', // poly\n        fillOpacity: 0, // poly fill opacity not applied if a rgba fillColor is provided\n        strokeColor: '#45D7E6', // line and poly\n        strokeOpacity: 1, // line and poly not applied if a rgba strokeColor is provided\n        strokeWidth: 4 // line and poly\n      };\n      this.searchOverlayStyleFocus = {\n        markerColor: '#45D7E6', // marker fill\n        markerOpacity: 1, // marker opacity not applied if a rgba markerColor is provided\n        markerOutlineColor: '#ffffff', // marker contour\n        fillColor: 'transparent', // poly\n        fillOpacity: 0, // poly fill opacity not applied if a rgba fillColor is provided\n        strokeColor: '#45D7E6', // line and poly\n        strokeOpacity: 1, // line and poly not applied if a rgba strokeColor is provided\n        strokeWidth: 4 // line and poly\n      };\n\n    const searchResultsGeometryEnabled = this.storageService.get('searchResultsGeometryEnabled') as boolean;\n    if (searchResultsGeometryEnabled) {\n      this.searchResultsGeometryEnabled$.next(searchResultsGeometryEnabled);\n    }\n    this.store.addStrategy(this.createCustomFilterTermStrategy(), false);\n  }\n\n  private createCustomFilterTermStrategy(): EntityStoreFilterCustomFuncStrategy {\n    const filterClauseFunc = (record: EntityRecord<SearchResult>) => {\n      return record.entity.meta.score === 100;\n    };\n    return new EntityStoreFilterCustomFuncStrategy({filterClauseFunc} as EntityStoreStrategyFuncOptions);\n  }\n\n  /**\n   * Activate custom strategy\n   *\n   */\n  activateCustomFilterTermStrategy() {\n    const strategy = this.store.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n    if (strategy !== undefined) {\n      strategy.activate();\n    }\n  }\n\n  /**\n   * Deactivate custom strategy\n   *\n   */\n  deactivateCustomFilterTermStrategy() {\n    const strategy = this.store.getStrategyOfType(EntityStoreFilterCustomFuncStrategy);\n    if (strategy !== undefined) {\n      strategy.deactivate();\n    }\n  }\n\n  enableSearch() {\n    this.searchDisabled$.next(false);\n  }\n\n  disableSearch() {\n    this.searchDisabled$.next(true);\n  }\n\n  setSearchTerm(searchTerm: string) {\n    this.searchTerm$.next(searchTerm);\n  }\n\n  setSearchType(searchType: string) {\n    this.searchSourceService.enableSourcesByType(searchType);\n    this.searchType$.next(searchType);\n  }\n\n  setSelectedResult(result: SearchResult) {\n    this.selectedResult$.next(result);\n  }\n\n  setSearchResultsGeometryStatus(value) {\n    this.storageService.set('searchResultsGeometryEnabled', value);\n    this.searchResultsGeometryEnabled$.next(value);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LanguageService } from '@igo2/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { interval } from 'rxjs';\nimport { ConfirmDialogService } from '@igo2/common';\nimport { skip, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PwaService {\n  private confirmOpened: boolean = false;\n  constructor(\n    private updates: SwUpdate,\n    private languageService: LanguageService,\n    private confirmDialogService: ConfirmDialogService\n  ) {\n    if (updates.isEnabled) {\n      this.handleVersionUpdates();\n    }\n  }\n\n  checkForUpdates() {\n    if (this.updates.isEnabled) {\n      interval(60 * 1000 * 2).pipe(skip(1)).subscribe(async () => {\n        try {\n          const updateFound = await this.updates.checkForUpdate();\n          console.log(updateFound ? 'A new version is available.' : 'Already on the latest version.');\n        } catch (err) {\n          console.error('Failed to check for updates:', err);\n        }\n      });\n    }\n  }\n\n  private modalUpdatePWA() {\n    if (this.confirmOpened) {\n      return;\n    }\n    const title = this.languageService.translate.instant('pwa.new-version-title');\n    const body = this.languageService.translate.instant('pwa.new-version');\n    const message = `${title} ${body}`;\n    this.confirmDialogService.open(message).pipe(tap(() => this.confirmOpened = true)).subscribe((confirm) => {\n      if (confirm) {\n        this.confirmOpened = false;\n        if (window.navigator.onLine) {\n          document.location.reload();\n        } else {\n          alert(`Hors-ligne / Offline. Vous devez être en ligne pour mettre à jour l\\'application. You must be online to update the application.`);\n          setTimeout(() => {\n            this.modalUpdatePWA();\n          }, 900000);\n        }\n      }\n    });\n  }\n\n  private handleVersionUpdates(): void {\n    this.updates.versionUpdates.subscribe(evt => {\n      switch (evt.type) {\n        case 'VERSION_DETECTED':\n          console.log(`Downloading new app version: ${evt.version.hash}`);\n          break;\n        case 'VERSION_READY':\n          console.log(`Current app version: ${evt.currentVersion.hash}`);\n          console.log(`New app version ready for use: ${evt.latestVersion.hash}`);\n          this.modalUpdatePWA();\n          break;\n        case 'VERSION_INSTALLATION_FAILED':\n          console.error(`Failed to install app version '${evt.version.hash}': ${evt.error}`);\n          break;\n      }\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { LanguageService } from '@igo2/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n\n  constructor(protected languageService: LanguageService) {}\n\n}\n","<div class=\"footer-right\" id=\"footer-id\">\n    <div id=\"scaleLine\"></div>\n    <span class=\"order2\">\n        <span class=\"footer-text\">\n            <a rel=\"noopener noreferrer\" alt=\"('externallinks' | translate)\" href=\"{{'footer.url-conditions' | translate}}\"\n            target=\"_blank\">{{'footer.conditions' | translate}}</a>\n        </span>\n        <span class=\"footer-text\">  |  </span>\n        <span class=\"footer-text\">\n            <a rel=\"noopener noreferrer\" alt=\"('externallinks' | translate)\" href=\"{{'footer.url-ministry' | translate}}\"\n            target=\"_blank\">{{'footer.ministry' | translate}}</a>\n        </span>\n        <span class=\"footer-text\">  |  </span>\n        <span class=\"footer-text\">\n            <a rel=\"noopener noreferrer\" alt=\"('externallinks' | translate)\" href=\"{{'footer.url-gov' | translate}}\"\n            target=\"_blank\">{{'footer.gov' | translate}}</a>\n        </span>\n    </span>\n</div>\n","<ng-container *ngFor=\"let element of mapOverlay; let i = index\">\n  <div class=\"mapOverlayDefault\" [ngClass]=\"element.cssClass\"\n       [style.position]=\"element.fixed ? 'fixed' : 'absolute'\"\n       [style.marginLeft]=\"element.marginLeft\"\n       [style.marginRight]=\"element.marginRight\"\n       [style.marginTop]=\"element.marginTop\"\n       [style.marginBottom]=\"element.marginBottom\"\n       [style.fontSize]=\"element.fontSize\">\n    <a *ngIf=\"element.link; else templateNoLink\"\n        target=\"_blank\" [href]='element.link'>\n        {{ element.text }}\n        <ng-container *ngIf=\"element.imgSrc\">\n          <img [src]=\"element.imgSrc\"\n               [alt]=\"element.alt\"\n               [ngStyle]=\"{ 'width': element.imgSize }\">\n        </ng-container>\n    </a>\n\n\n  <ng-template #templateNoLink>\n    {{ element.text }}\n    <ng-container *ngIf=\"element.imgSrc\">\n      <img [src]=\"element.imgSrc\" [alt]=\"element.alt\" [ngStyle]=\"{ 'width': element.imgSize }\">\n    </ng-container>\n\n  </ng-template>\n  </div>\n</ng-container>\n","import { Component, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Context, ContextService } from '@igo2/context';\nimport { MediaService, ConfigService } from '@igo2/core';\nimport { MapOverlay } from './map-overlay.interface';\n\n@Component({\n  selector: 'app-map-overlay',\n  templateUrl: './map-overlay.component.html',\n  styleUrls: ['./map-overlay.component.scss']\n})\n\nexport class MapOverlayComponent implements AfterViewInit, OnDestroy {\n  public mapOverlay: MapOverlay[] = [];\n  private context$$: Subscription;\n  private media$$: Subscription;\n  private context: Context;\n\n  constructor(\n    private contextService: ContextService,\n    private mediaService: MediaService,\n    private configService: ConfigService\n  ) { }\n\n  ngAfterViewInit() {\n    this.context$$ = this.contextService.context$.subscribe(context => {\n        this.handleContextChange(context);\n        this.context = context;\n        }\n    );\n    this.media$$ = this.mediaService.media$.subscribe(media =>\n      this.handleContextChange(this.context)\n    );\n  }\n\n  ngOnDestroy() {\n    this.context$$.unsubscribe();\n    this.media$$.unsubscribe();\n  }\n\n  private handleContextChange(context: Context) {\n    let mapOverlay = [];\n    if (context !== undefined) {\n      this.mapOverlay = [];\n\n      if (context['mapOverlay']) {\n        mapOverlay = context['mapOverlay'];\n      } else if (this.configService.getConfig('mapOverlay')) {\n        mapOverlay = this.configService.getConfig('mapOverlay');\n      }\n      for (const overlay of mapOverlay) {\n\n        // If no media define use default to desktop, display only if current media is on context definition\n        if ((!overlay.media && this.mediaService.getMedia() === 'desktop') ||\n        (overlay.media && overlay.media.includes(this.mediaService.getMedia()))) {\n          this.mapOverlay.push(overlay);\n        }\n      }\n    }\n\n  }\n}\n","<igo-flexible\n  *ngIf=\"store && (store.stateView.empty$ | async)===false\"\n  #topPanel\n  initial=\"100%\"\n  initialMobile=\"100%\"\n  collapsed=\"calc(100% - 58px)\"\n  collapsedMobile=\"calc(100% - 58px)\"\n  expanded=\"60%\"\n  expandedMobile=\"60%\"\n  [state]=\"(feature$ | async) ? topPanelState : 'initial'\">\n\n  <div class=\"igo-content\">\n    <igo-search-results\n      [store]=\"store\"\n      [showIcons]=\"showIcons\"\n      [term]=\"term\"\n      [termSplitter]=\"termSplitter\"\n      [settingsChange$]=\"settingsChange$\"\n      placeholder=\"false\"\n      (resultFocus)=\"onResultFocus($event)\"\n      (resultSelect)=\"onResultSelect($event)\"\n      (resultUnfocus)=\"onResultUnfocus($event)\"\n      (resultMouseenter)=\"onResultFocus($event)\"\n      (resultMouseleave)=\"onResultUnfocus($event)\"\n      (moreResults)=\"onSearch($event)\">\n      <ng-template #igoSearchItemToolbar let-result=\"result\">\n        <igo-search-add-button\n          *ngIf(addFeaturetoLayer)\n          [map]=\"map\"\n          [layer]=\"result\">\n        </igo-search-add-button>\n      </ng-template>\n    </igo-search-results>\n  </div>\n\n</igo-flexible>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnInit,\n  ElementRef,\n  OnDestroy,\n  HostListener,\n  Output, EventEmitter\n} from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\nimport olFeature from 'ol/Feature';\nimport olPoint from 'ol/geom/Point';\nimport type { default as OlGeometry } from 'ol/geom/Geometry';\n\nimport pointOnFeature from '@turf/point-on-feature';\nimport * as olProj from 'ol/proj';\nimport { ConfigService } from '@igo2/core';\n\nimport {\n  EntityStore,\n  ToolComponent,\n  getEntityTitle,\n  EntityState\n} from '@igo2/common';\n\nimport {\n  FEATURE,\n  Feature,\n  FeatureMotion,\n  SearchResult,\n  IgoMap,\n  moveToOlFeatures,\n  Research,\n  featuresAreTooDeepInView,\n  featureToOl,\n  featureFromOl,\n  getCommonVectorStyle,\n  getCommonVectorSelectedStyle,\n  computeOlFeaturesExtent,\n  featuresAreOutOfView,\n  roundCoordTo\n} from '@igo2/geo';\n\nimport { MapState, ToolState, DirectionState, QueryState } from '@igo2/integration';\nimport { SearchState } from './search.state';\n\n/**\n * Tool to browse the search results\n */\n@ToolComponent({\n  name: 'searchResults',\n  title: 'igo.integration.tools.searchResults',\n  icon: 'magnify'\n})\n@Component({\n  selector: 'app-search-results-tool',\n  templateUrl: './search-results-tool.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchResultsToolComponent implements OnInit, OnDestroy {\n  /**\n   * to show hide results icons\n   */\n  @Input() showIcons: boolean = true;\n\n  private hasFeatureEmphasisOnSelection: boolean;\n  private showResultsGeometries$$: Subscription;\n  private getRoute$$: Subscription;\n  private shownResultsGeometries: Feature[] = [];\n  private shownResultsEmphasisGeometries: Feature[] = [];\n  private focusedResult$: BehaviorSubject<SearchResult> = new BehaviorSubject(\n    undefined\n  );\n  public isSelectedResultOutOfView$ = new BehaviorSubject(false);\n  private isSelectedResultOutOfView$$: Subscription;\n  private abstractFocusedResult: Feature;\n  private abstractSelectedResult: Feature;\n\n  public debouncedEmpty$ :BehaviorSubject<boolean> = new BehaviorSubject(true);\n  private debouncedEmpty$$: Subscription;\n  @Output() featureSelected = new EventEmitter<boolean>();\n  public addFeaturetoLayer : boolean; // in the result features list, display an icon \"add this feature to a layer\"\n\n  /**\n   * Store holding the search results\n   * @internal\n   */\n  get store(): EntityStore<SearchResult> {\n    return this.searchState.store;\n  }\n\n  /**\n   * Map to display the results on\n   * @internal\n   */\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get featureTitle(): string {\n    return this.feature ? getEntityTitle(this.feature) : undefined;\n  }\n\n  get feature$(): Observable<Feature> {\n    return this.store.stateView\n      .firstBy$((e) => e.state.focused)\n      .pipe(\n        map(\n          (element) =>\n          (this.feature = element\n            ? (element.entity.data as Feature)\n            : undefined)\n        )\n      );\n  }\n  public feature: Feature;\n\n  public term = '';\n  private searchTerm$$: Subscription;\n  public settingsChange$ = new BehaviorSubject<boolean>(undefined);\n\n  get termSplitter(): string {\n    return this.searchState.searchTermSplitter$.value;\n  }\n\n  private format = new olFormatGeoJSON();\n\n  get searchStore(): EntityStore<SearchResult> {\n    return this.searchState.store;\n  }\n\n  public initialized: boolean = undefined;\n\n  @Output() searchEvent = new EventEmitter();\n\n  @Input()\n  get mapQueryClick(): boolean {\n    return this._mapQueryClick;\n  }\n  set mapQueryClick(value: boolean) {\n    this._mapQueryClick = value;\n  }\n  private _mapQueryClick: boolean;\n\n  @Input()\n  get searchInit(): boolean {\n    return this._searchInit;\n  }\n  set searchInit(value: boolean) {\n    this._searchInit = value;\n  }\n  private _searchInit: boolean;\n\n  @Input()\n  get legendPanelOpened(): boolean {\n    return this._legendPanelOpened;\n  }\n  set legendPanelOpened(value: boolean) {\n    this._legendPanelOpened = value;\n  }\n  private _legendPanelOpened: boolean;\n\n  get queryStore(): EntityStore<SearchResult> {\n    return this.queryState.store;\n  }\n\n  constructor(\n    private mapState: MapState,\n    private searchState: SearchState,\n    private elRef: ElementRef,\n    public toolState: ToolState,\n    private directionState: DirectionState,\n    configService: ConfigService,\n    private queryState: QueryState\n  ) {\n    this.hasFeatureEmphasisOnSelection = configService.getConfig(\n      'hasFeatureEmphasisOnSelection'\n    );\n    this.addFeaturetoLayer = configService.getConfig(\n      'addFeaturetoLayer'\n    );\n  }\n\n  ngOnInit() {\n    this.initialized = true;\n    this.searchTerm$$ = this.searchState.searchTerm$.subscribe(\n      (searchTerm: string) => {\n        if (searchTerm !== undefined && searchTerm !== null) {\n          this.term = searchTerm;\n        }\n      }\n    );\n\n    if (this.hasFeatureEmphasisOnSelection) {\n      if (!this.searchState.focusedOrResolution$$) {\n        this.searchState.focusedOrResolution$$ = combineLatest([\n          this.focusedResult$,\n          this.map.viewController.resolution$\n        ]).subscribe((bunch: [SearchResult<Feature>, number]) =>\n          this.buildResultEmphasis(bunch[0], 'focused')\n        );\n      }\n\n      if (!this.searchState.selectedOrResolution$$) {\n        this.searchState.selectedOrResolution$$ = combineLatest([\n          this.searchState.selectedResult$,\n          this.map.viewController.resolution$\n        ]).subscribe((bunch: [SearchResult<Feature>, number]) =>\n          this.buildResultEmphasis(bunch[0], 'selected')\n        );\n      }\n    }\n    this.monitorResultOutOfView();\n\n    this.showResultsGeometries$$ = combineLatest([\n      this.searchState.searchResultsGeometryEnabled$,\n      this.store.stateView.all$(),\n      this.focusedResult$,\n      this.searchState.selectedResult$,\n      this.searchState.searchTerm$,\n      this.map.viewController.resolution$\n    ]).subscribe((bunch: [boolean, { entity: SearchResult, state: EntityState }[], SearchResult, SearchResult, string, number]) => {\n\n      const searchResultsGeometryEnabled = bunch[0];\n      const searchResults = bunch[1];\n\n      if (this.hasFeatureEmphasisOnSelection) {\n        this.clearFeatureEmphasis('shown');\n      }\n      this.shownResultsGeometries.map(result => this.map.queryResultsOverlay.removeFeature(result));\n      const featureToHandleGeom = searchResults\n        .filter(result =>\n          result.entity.meta.dataType === FEATURE &&\n          result.entity.data.geometry &&\n          !result.state.selected &&\n          !result.state.focused);\n\n      featureToHandleGeom.map(result => {\n        if (searchResultsGeometryEnabled) {\n          result.entity.data.meta.style =\n            getCommonVectorStyle(\n              Object.assign(\n                {},\n                { feature: result.entity.data as Feature | olFeature<OlGeometry> },\n                this.searchState.searchOverlayStyle,\n                result.entity.style?.base ? result.entity.style.base : {}\n              ));\n          this.shownResultsGeometries.push(result.entity.data as Feature);\n          this.map.queryResultsOverlay.addFeature(result.entity.data as Feature, FeatureMotion.None);\n          if (this.hasFeatureEmphasisOnSelection) {\n            this.buildResultEmphasis(result.entity as SearchResult<Feature>, 'shown');\n          }\n        }\n      });\n    });\n\n    this.debouncedEmpty$$ = this.store.stateView.empty$.pipe(debounceTime(1500)).subscribe(empty => this.debouncedEmpty$.next(empty));\n  }\n\n  private monitorResultOutOfView() {\n    this.isSelectedResultOutOfView$$ = combineLatest([\n      this.map.viewController.state$,\n      this.searchState.selectedResult$\n    ])\n      .pipe(debounceTime(100))\n      .subscribe((bunch) => {\n        const selectedResult = bunch[1] as SearchResult<Feature>;\n        if (!selectedResult) {\n          this.isSelectedResultOutOfView$.next(false);\n          return;\n        }\n        if (selectedResult.data.geometry) {\n          const selectedOlFeature = featureToOl(\n            selectedResult.data,\n            this.map.projection\n          );\n          const selectedOlFeatureExtent = computeOlFeaturesExtent(this.map, [\n            selectedOlFeature\n          ]);\n          this.isSelectedResultOutOfView$.next(\n            featuresAreOutOfView(this.map, selectedOlFeatureExtent)\n          );\n        }\n      });\n  }\n\n  private buildResultEmphasis(\n    result: SearchResult<Feature>,\n    trigger: 'selected' | 'focused' | 'shown' | undefined\n  ) {\n    if (trigger !== 'shown') {\n      this.clearFeatureEmphasis(trigger);\n    }\n    if (!result || !result.data.geometry) {\n      return;\n    }\n    const myOlFeature = featureToOl(result.data, this.map.projection);\n    const olGeometry = myOlFeature.getGeometry();\n    if (featuresAreTooDeepInView(this.map, olGeometry.getExtent() as [number, number, number, number], 0.0025)) {\n      const extent = olGeometry.getExtent();\n      const x = extent[0] + (extent[2] - extent[0]) / 2;\n      const y = extent[1] + (extent[3] - extent[1]) / 2;\n      const feature1 = new olFeature({\n        name: `${trigger}AbstractResult'`,\n        geometry: new olPoint([x, y])\n      });\n      const abstractResult = featureFromOl(feature1, this.map.projection);\n\n      let computedStyle;\n      let zIndexOffset = 0;\n\n      switch (trigger) {\n        case 'focused':\n          computedStyle = getCommonVectorSelectedStyle(\n            Object.assign({},\n              { feature: abstractResult },\n              this.searchState.searchOverlayStyleFocus,\n              result.style?.focus ? result.style.focus : {}));\n          zIndexOffset = 2;\n          break;\n        case 'shown':\n          computedStyle = getCommonVectorStyle(Object.assign({},\n            { feature: abstractResult },\n            this.searchState.searchOverlayStyle,\n            result.style?.base ? result.style.base : {}));\n          break;\n        case 'selected':\n          computedStyle = getCommonVectorSelectedStyle(\n            Object.assign({},\n              { feature: abstractResult },\n              this.searchState.searchOverlayStyleSelection,\n              result.style?.selection ? result.style.selection : {}));\n          zIndexOffset = 1;\n          break;\n      }\n      abstractResult.meta.style = computedStyle;\n      abstractResult.meta.style.setZIndex(2000 + zIndexOffset);\n      this.map.searchResultsOverlay.addFeature(abstractResult, FeatureMotion.None);\n      if (trigger === 'focused') {\n        this.abstractFocusedResult = abstractResult;\n      }\n      if (trigger === 'selected') {\n        this.abstractSelectedResult = abstractResult;\n      }\n      if (trigger === 'shown') {\n        this.shownResultsEmphasisGeometries.push(abstractResult);\n      }\n    } else {\n      this.clearFeatureEmphasis(trigger);\n    }\n  }\n\n  private clearFeatureEmphasis(trigger: 'selected' | 'focused' | 'shown') {\n    if (trigger === 'focused' && this.abstractFocusedResult) {\n      this.map.searchResultsOverlay.removeFeature(this.abstractFocusedResult);\n      this.abstractFocusedResult = undefined;\n    }\n    if (trigger === 'selected' && this.abstractSelectedResult) {\n      this.map.searchResultsOverlay.removeFeature(this.abstractSelectedResult);\n      this.abstractSelectedResult = undefined;\n    }\n    if (trigger === 'shown') {\n      this.shownResultsEmphasisGeometries.map(shownResult => this.map.searchResultsOverlay.removeFeature(shownResult));\n      this.shownResultsEmphasisGeometries = [];\n    }\n  }\n\n  @HostListener('change')\n  ngOnDestroy() {\n    this.searchTerm$$.unsubscribe();\n    if (this.isSelectedResultOutOfView$$) {\n      this.isSelectedResultOutOfView$$.unsubscribe();\n    }\n    if (this.showResultsGeometries$$) {\n      this.showResultsGeometries$$.unsubscribe();\n    }\n    if (this.getRoute$$) {\n      this.getRoute$$.unsubscribe();\n    }\n    if (this.debouncedEmpty$$) {\n      this.debouncedEmpty$$.unsubscribe();\n    }\n  }\n\n  /**\n   * Try to add a feature to the map when it's being focused\n   * @internal\n   * @param result A search result that could be a feature\n   */\n  onResultFocus(result: SearchResult) {\n    this.focusedResult$.next(result);\n    if (result.meta.dataType === FEATURE && result.data.geometry) {\n      result.data.meta.style = getCommonVectorSelectedStyle(\n        Object.assign({},\n          { feature: result.data as Feature | olFeature<OlGeometry> },\n          this.searchState.searchOverlayStyleFocus,\n          result.style?.focus ? result.style.focus : {}));\n\n      const feature = this.map.searchResultsOverlay.dataSource.ol.getFeatureById(result.meta.id);\n      if (feature) {\n        feature.setStyle(result.data.meta.style);\n        return;\n      }\n      this.map.searchResultsOverlay.addFeature(result.data as Feature, FeatureMotion.None);\n      this.featureSelected.emit();\n    }\n  }\n\n  onResultUnfocus(result: SearchResult) {\n    this.focusedResult$.next(undefined);\n    if (result.meta.dataType !== FEATURE) {\n      return;\n    }\n\n    if (this.store.state.get(result).selected === true) {\n      this.featureSelected.emit();\n      const feature = this.map.searchResultsOverlay.dataSource.ol.getFeatureById(result.meta.id);\n      if (feature) {\n        const style = getCommonVectorSelectedStyle(\n          Object.assign({},\n            { feature: result.data as Feature | olFeature<OlGeometry> },\n            this.searchState.searchOverlayStyleFocus,\n            result.style?.focus ? result.style.focus : {}));\n        feature.setStyle(style);\n      }\n      return;\n    }\n    this.map.searchResultsOverlay.removeFeature(result.data as Feature);\n  }\n\n  /**\n   * Try to add a feature to the map when it's being selected\n   * @internal\n   * @param result A search result that could be a feature or some layer options\n   */\n  onResultSelect(result: SearchResult) {\n    this.map.searchResultsOverlay.dataSource.ol.clear();\n    this.tryAddFeatureToMap(result);\n    this.searchState.setSelectedResult(result);\n  }\n\n  onSearch(event: { research: Research; results: SearchResult[] }) {\n    if (this.mapQueryClick = true) { // to clear the mapQuery if a search is initialized\n      this.queryState.store.softClear();\n      this.map.queryResultsOverlay.clear();\n      this.mapQueryClick = false;\n    }\n    this.store.clear();\n    this.searchInit = true;\n    this.legendPanelOpened = false;\n    const results = event.results;\n    this.searchStore.state.updateAll({ focused: false, selected: false });\n    const newResults = this.searchStore.entities$.value\n      .filter((result: SearchResult) => result.source !== event.research.source)\n      .concat(results);\n    this.searchStore.updateMany(newResults);\n\n    setTimeout(() => {\n      const igoList = this.elRef.nativeElement.querySelector('igo-list');\n      let moreResults;\n      event.research.request.subscribe((source) => {\n        if (!source[0] || !source[0].source) {\n          moreResults = null;\n        } else if (source[0].source.getId() === 'icherche') {\n          moreResults = igoList.querySelector('.icherche .moreResults');\n        } else if (source[0].source.getId() === 'ilayer') {\n          moreResults = igoList.querySelector('.ilayer .moreResults');\n        } else if (source[0].source.getId() === 'nominatim') {\n          moreResults = igoList.querySelector('.nominatim .moreResults');\n        } else {\n          moreResults = igoList.querySelector('.' + source[0].source.getId() + ' .moreResults');\n        }\n        if (\n          moreResults !== null &&\n          !this.isScrolledIntoView(igoList, moreResults)\n        ) {\n          igoList.scrollTop =\n            moreResults.offsetTop +\n            moreResults.offsetHeight -\n            igoList.clientHeight;\n        }\n      });\n    }, 250);\n  }\n\n  computeElementRef() {\n    const items = document.getElementsByTagName('igo-search-results-item');\n    const igoList = this.elRef.nativeElement.getElementsByTagName(\n      'igo-list'\n    )[0];\n    let selectedItem;\n    // eslint-disable-next-line\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].className.includes('igo-list-item-selected')) {\n        selectedItem = items[i];\n      }\n    }\n    return [igoList, selectedItem];\n  }\n\n  adjustTopPanel(elemSource, elem) {\n    if (!this.isScrolledIntoView(elemSource, elem)) {\n      elemSource.scrollTop =\n        elem.offsetTop +\n        elem.children[0].offsetHeight -\n        elemSource.clientHeight;\n    }\n  }\n\n  zoomToFeatureExtent() {\n    if (this.feature.geometry) {\n      const localOlFeature = this.format.readFeature(this.feature, {\n        dataProjection: this.feature.projection,\n        featureProjection: this.map.projection\n      });\n      moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Zoom);\n    }\n  }\n\n  /**\n   * Try to add a feature to the map overlay\n   * @param result A search result that could be a feature\n   */\n  private tryAddFeatureToMap(result: SearchResult) {\n    if (result.meta.dataType !== FEATURE) {\n      return undefined;\n    }\n    const feature = (result as SearchResult<Feature>).data;\n\n    // Somethimes features have no geometry. It happens with some GetFeatureInfo\n    if (!feature.geometry) {\n      return;\n    }\n\n    feature.meta.style = getCommonVectorSelectedStyle(\n      Object.assign({},\n        { feature },\n        this.searchState.searchOverlayStyleSelection,\n        result.style?.selection ? result.style.selection : {}));\n\n    this.map.searchResultsOverlay.addFeature(feature);\n  }\n\n  isScrolledIntoView(elemSource, elem) {\n    const padding = 6;\n    const docViewTop = elemSource.scrollTop;\n    const docViewBottom = docViewTop + elemSource.clientHeight;\n\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.clientHeight + padding;\n    return elemBottom <= docViewBottom && elemTop >= docViewTop;\n  }\n\n  getRoute() {\n    //this.toolState.toolbox.activateTool('directions');\n    this.directionState.stopsStore.clearStops();\n    setTimeout(() => {\n      let routingCoordLoaded = false;\n      if (this.getRoute$$) { this.getRoute$$.unsubscribe(); }\n      this.getRoute$$ = this.directionState.stopsStore.storeInitialized$.subscribe((init: boolean) => {\n        if (this.directionState.stopsStore.storeInitialized$.value && !routingCoordLoaded) {\n          routingCoordLoaded = true;\n          const stop = this.directionState.stopsStore.all().find((e) => e.position === 1);\n          let coord;\n          if (this.feature.geometry) {\n            if (this.feature.geometry.type === 'Point') {\n              coord = [this.feature.geometry.coordinates[0], this.feature.geometry.coordinates[1]];\n            } else {\n              const point = pointOnFeature(this.feature.geometry);\n              coord = [point.geometry.coordinates[0], point.geometry.coordinates[1]];\n            }\n          }\n          stop.text = this.featureTitle;\n          stop.coordinates = coord;\n          this.directionState.stopsStore.update(stop);\n          if (this.map.geolocationController.position$.value) {\n            const currentPos = this.map.geolocationController.position$.value;\n            const stop = this.directionState.stopsStore.all().find((e) => e.position === 0);\n            const currentCoord = olProj.transform(currentPos.position, currentPos.projection, 'EPSG:4326');\n            const coord: [number,number] = roundCoordTo([currentCoord[0], currentCoord[1]], 6);\n            stop.text = coord.join(',');\n            stop.coordinates = coord;\n            this.directionState.stopsStore.update(stop);\n          }\n\n        }\n      });\n    }, 250);\n  }\n}\n","\n<div class=\"flextable\" role=\"table\" class=\"igo-striped mat-typography table-container\" *ngIf=\"ready && feature && feature.properties\">\n  \n\n    <div *ngFor=\"let property of filterFeatureProperties(feature) | keyvalue\" title={{property.key}}>\n\n      <div class=\"table-row\">\n        <div *ngIf=\"feature.properties.target === '_blank' && property.key === 'url'\" class=\"key flex-row\" role=\"rowheader\">\n          <mat-icon mat-list-avatar svgIcon=\"{{icon}}\"></mat-icon>\n        </div>\n      \n        <div *ngIf=\"feature.properties.target === '_blank' && property.key === 'url'\" class=\"key flex-row\" role=\"rowheader\">\n          <a href=\"{{property.value}}\" target='_blank' rel=\"noopener noreferrer\"> {{ 'igo.geo.targetHtmlUrl' | translate }} {{title}}</a>\n          <button class=\"copyClipboard\" mat-icon-button (click)=\"copyTextToClipboard(property.value)\">\n            <mat-icon svgIcon=\"content-copy\"></mat-icon>\n          </button>\n        </div>\n\n        <div id=\"keyValue\" *ngIf=\"feature.properties.target === undefined\" class=\"key flex-row\" role=\"rowheader\">\n          {{property.key}}\n        </div>\n\n        <div *ngIf=\"feature.properties.target === undefined && !isObject(property.value) && !isUrl(property.value) && !isEmbeddedLink(property.value)\" [innerHTML]=\"property.value\"\n          class=\"value flex-row\" role=\"cell\">\n        </div>\n\n        <div *ngIf=\"feature.properties.target === undefined && isEmbeddedLink(property.value)\"\n          class=\"value flex-row\" role=\"cell\">\n          <u [ngStyle]=\"{'cursor': 'pointer', 'color': 'blue'}\" (click)=\"openSecureUrl(property.value)\">{{ getEmbeddedLinkText(property.value) }}</u>\n        </div>\n\n        <div *ngIf=\"feature.properties.target === undefined && !isObject(property.value) && (isDoc(property.value) || isUrl(property.value)) && !isImg(property.value)\"\n          class=\"value flex-row\" role=\"cell\">\n          <u [ngStyle]=\"{'cursor': 'pointer', 'color': 'blue'}\" (click)=\"openSecureUrl(property.value)\">{{ 'igo.geo.targetHtmlUrl' | translate }}</u>\n          <button class=\"copyClipboard\" mat-icon-button (click)=\"copyTextToClipboard(property.value)\">\n            <mat-icon svgIcon=\"content-copy\"></mat-icon>\n          </button>\n        </div>\n\n        <div *ngIf=\"feature.properties.target === undefined && !isObject(property.value) && isUrl(property.value) && isImg(property.value)\"\n          class=\"value flex-row\" role=\"cell\">\n          <a href=\"{{property.value}}\" target='_blank' (click)=\"openSecureUrl(property.value)\" rel=\"noopener noreferrer\">\n            <img igoImageError src=\"{{(property.value | secureImage) | async}}\" width=\"225\" height=\"auto\">\n          </a>\n        </div>\n\n        <div *ngIf=\"feature.properties.target === undefined && isObject(property.value)\" [innerHTML]=\"property.value | json\" class=\"value flex-row\" role=\"cell\">\n        </div>\n      </div>\n\n    </div>\n  </div>","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NetworkService, ConnectionState, MessageService } from '@igo2/core';\nimport { ConfigService } from '@igo2/core';\nimport { SearchSource, IgoMap, Feature } from '@igo2/geo';\nimport { HttpClient } from '@angular/common/http';\nimport { Clipboard } from '@igo2/utils';\n\n@Component({\n  selector: 'app-feature-details',\n  templateUrl: './feature-details.component.html',\n  styleUrls: ['./feature-details.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class FeatureDetailsComponent implements OnDestroy, OnInit {\n  private state: ConnectionState;\n  private unsubscribe$ = new Subject<void>();\n\n  @Input()\n  get source(): SearchSource {\n    return this._source;\n  }\n  set source(value: SearchSource) {\n    this._source = value;\n    this.cdRef.detectChanges();\n  }\n\n  @Input() map: IgoMap;\n\n  @Input()\n  get feature(): Feature {\n    return this._feature;\n  }\n  set feature(value: Feature) {\n    this._feature = value;\n    this.cdRef.detectChanges();\n    this.selectFeature.emit();\n  }\n\n  @Input() mobile: boolean;\n  @Input() mapQueryClick: boolean;\n  @Output() mapQuery = new EventEmitter<boolean>();\n\n  private _feature: Feature;\n  private _source: SearchSource;\n  public featureTitle: string;\n\n  @Output() selectFeature = new EventEmitter<boolean>();\n\n  public title: string;\n\n  public ready : boolean;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private networkService: NetworkService,\n    private configService: ConfigService,\n    private http: HttpClient,\n    private messageService: MessageService,\n  ) {\n    this.networkService.currentState().pipe(takeUntil(this.unsubscribe$)).subscribe((state: ConnectionState) => {\n      this.state = state;\n    });\n  }\n\n  ngOnInit() {\n    this.ready = true;\n    this.title = this.feature.properties.value;\n  }\n\n  ngOnDestroy() {\n    this.mapQuery.emit(false);\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  formatReading(reading: number): string {\n    return reading.toString().replace(\".\", \",\");\n  }\n\n    /**\n   * @internal\n   */\n\n  isObject(value) {\n    return typeof value === 'object';\n  }\n\n  isDoc(value) {\n    if (typeof value === 'string') {\n      if (this.isUrl(value)) {\n        const regex = /(pdf|docx?|xlsx?)$/;\n        return regex.test(value.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  }\n\n  isUrl(value) {\n    if (typeof value === 'string') {\n      const regex = /^https?:\\/\\//;\n      return regex.test(value);\n    }\n  }\n\n  isImg(value) {\n    if (typeof value ==='string') {\n      if (this.isUrl(value)) {\n        const regex = /(jpe?g|png|gif)$/;\n        return regex.test(value.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  }\n\n  isEmbeddedLink(value) {\n    if (typeof value === 'string') {\n        const matchRegex = /<a/g;\n        const match = value.match(matchRegex) || [];\n        const count = match.length;\n        if (count === 1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    return false;\n  }\n\nopenSecureUrl(value) {\n  let url: string;\n  const regexDepot = new RegExp(this.configService?.getConfig('depot.url') + '.*?(?=\"|$)');\n\n  if (regexDepot.test(value)) {\n    url = value.match(regexDepot)[0];\n\n    this.http.get(url, {\n      responseType: 'blob'\n    })\n    .subscribe((docOrImage) => {\n      const fileUrl = URL.createObjectURL(docOrImage);\n      window.open(fileUrl, '_blank');\n      this.cdRef.detectChanges();\n    },\n    (error: Error) => {\n      this.messageService.error('igo.geo.targetHtmlUrlUnauthorized', 'igo.geo.targetHtmlUrlUnauthorizedTitle');\n    });\n  } else {\n    let url = value;\n    if (this.isEmbeddedLink(value)) {\n      var div = document.createElement('div');\n      div.innerHTML = value;\n      url = div.children[0].getAttribute('href');\n    }\n    window.open(url, '_blank');\n  }\n}\n\ngetEmbeddedLinkText(value) {\n  const regex = /(?:>).*?(?=<|$)/;\n  let text = value.match(regex)[0] as string;\n  text = text.replace(/>/g, '');\n  return text;\n}\n\nfilterFeatureProperties(feature) {\n  const allowedFieldsAndAlias = feature.meta ? feature.meta.alias : undefined;\n  this.featureTitle = feature.meta ? feature.meta.title : undefined; // will define the feature info title in the panel\n  const properties = {};\n  let offlineButtonState;\n\n  if (feature.properties && feature.properties.Route) {\n    delete feature.properties.Route;\n  }\n\n  if (allowedFieldsAndAlias) {\n    Object.keys(allowedFieldsAndAlias).forEach(field => {\n      properties[allowedFieldsAndAlias[field]] = feature.properties[field];\n    });\n    return properties;\n    } else if (offlineButtonState !== undefined) {\n      if (!offlineButtonState) {\n        if (this.state.connection && feature.meta && feature.meta.excludeAttribute) {\n          const excludeAttribute = feature.meta.excludeAttribute;\n          excludeAttribute.forEach(attribute => {\n            delete feature.properties[attribute];\n          });\n        } else if (!this.state.connection && feature.meta && feature.meta.excludeAttributeOffline) {\n          const excludeAttributeOffline = feature.meta.excludeAttributeOffline;\n          excludeAttributeOffline.forEach(attribute => {\n            delete feature.properties[attribute];\n          });\n        }\n      } else {\n        if (feature.meta && feature.meta.excludeAttributeOffline) {\n          const excludeAttributeOffline = feature.meta.excludeAttributeOffline;\n          excludeAttributeOffline.forEach(attribute => {\n            delete feature.properties[attribute];\n          });\n        }\n      }\n    } else {\n      if (this.state.connection && feature.meta && feature.meta.excludeAttribute) {\n        const excludeAttribute = feature.meta.excludeAttribute;\n        excludeAttribute.forEach(attribute => {\n          delete feature.properties[attribute];\n        });\n      } else if (!this.state.connection && feature.meta && feature.meta.excludeAttributeOffline) {\n        const excludeAttributeOffline = feature.meta.excludeAttributeOffline;\n        excludeAttributeOffline.forEach(attribute => {\n          delete feature.properties[attribute];\n        });\n      }\n    }\n\n    return feature.properties;\n  }\n\n    /**\n   * Copy the url to a clipboard\n   */\n    copyTextToClipboard(value: string): void {\n      const successful = Clipboard.copy(value);\n      if (successful) {\n        this.messageService.success('igo.geo.query.link.message');\n      }\n    }\n\n}\n","\n<div class=\"flextable\" role=\"table\" class=\"igo-striped mat-typography table-container\" *ngIf=\"ready && feature && feature.properties\">\n  Custom feature details template\n  <mat-icon\n    class=\"info\"\n    color=\"primary\"\n    svgIcon=\"information\"\n    [matTooltip]=\"('feature.tooltip'| translate)\"\n    [matTooltipPosition]=\"mobile? 'above' : 'right'\"\n    [matTooltipClass]=\"mobile? 'tooltip-above' : 'tooltip-right'\">\n  </mat-icon> <!-- customise this template as you wish, even by layer using feature.meta.id or other layers metadatas -->\n\n    <div *ngFor=\"let property of filterFeatureProperties(feature) | keyvalue\">\n\n      <div class=\"table-row\">\n        <div *ngIf=\"feature.properties.target === '_blank' && property.key === 'url'\" class=\"key flex-row\" role=\"rowheader\">\n          <mat-icon mat-list-avatar svgIcon=\"{{icon}}\"></mat-icon>\n        </div>\n      \n        <div *ngIf=\"feature.properties.target === '_blank' && property.key === 'url'\" class=\"key flex-row\" role=\"rowheader\">\n          <a href=\"{{property.value}}\" target='_blank' rel=\"noopener noreferrer\"> {{ 'igo.geo.targetHtmlUrl' | translate }} {{title}}</a>\n          <button class=\"copyClipboard\" mat-icon-button (click)=\"copyTextToClipboard(property.value)\">\n            <mat-icon svgIcon=\"content-copy\"></mat-icon>\n          </button>\n        </div>\n\n        <div id=\"keyValue\" *ngIf=\"feature.properties.target === undefined\" class=\"key flex-row\" role=\"rowheader\">\n          {{property.key}}\n        </div>\n\n        <div *ngIf=\"feature.properties.target === undefined && !isObject(property.value) && !isUrl(property.value) && !isEmbeddedLink(property.value)\" [innerHTML]=\"property.value\"\n          class=\"value flex-row\" role=\"cell\">\n        </div>\n\n        <div *ngIf=\"feature.properties.target === undefined && isEmbeddedLink(property.value)\"\n          class=\"value flex-row\" role=\"cell\">\n          <u [ngStyle]=\"{'cursor': 'pointer', 'color': 'blue'}\" (click)=\"openSecureUrl(property.value)\">{{ getEmbeddedLinkText(property.value) }}</u>\n        </div>\n\n        <div *ngIf=\"feature.properties.target === undefined && !isObject(property.value) && (isDoc(property.value) || isUrl(property.value)) && !isImg(property.value)\"\n          class=\"value flex-row\" role=\"cell\">\n          <u [ngStyle]=\"{'cursor': 'pointer', 'color': 'blue'}\" (click)=\"openSecureUrl(property.value)\">{{ 'igo.geo.targetHtmlUrl' | translate }}</u>\n          <button class=\"copyClipboard\" mat-icon-button (click)=\"copyTextToClipboard(property.value)\">\n            <mat-icon svgIcon=\"content-copy\"></mat-icon>\n          </button>\n        </div>\n\n        <div *ngIf=\"feature.properties.target === undefined && !isObject(property.value) && isUrl(property.value) && isImg(property.value)\"\n          class=\"value flex-row\" role=\"cell\">\n          <a href=\"{{property.value}}\" target='_blank' (click)=\"openSecureUrl(property.value)\" rel=\"noopener noreferrer\">\n            <img igoImageError src=\"{{(property.value | secureImage) | async}}\" width=\"225\" height=\"auto\">\n          </a>\n        </div>\n\n        <div *ngIf=\"feature.properties.target === undefined && isObject(property.value)\" [innerHTML]=\"property.value | json\" class=\"value flex-row\" role=\"cell\">\n        </div>\n      </div>\n\n    </div>\n  </div>","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NetworkService, ConnectionState, LanguageService, MessageService } from '@igo2/core';\nimport { ConfigService } from '@igo2/core';\nimport { SearchSource, IgoMap, Feature } from '@igo2/geo';\nimport { HttpClient } from '@angular/common/http';\nimport { TooltipPosition } from '@angular/material/tooltip';\nimport { getEntityTitle } from '@igo2/common';\n\n@Component({\n  selector: 'app-feature-details-custom',\n  templateUrl: './feature-details-custom.component.html',\n  styleUrls: ['./feature-details-custom.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class FeatureDetailsCustomComponent implements OnDestroy, OnInit {\n  private state: ConnectionState;\n  private unsubscribe$ = new Subject<void>();\n\n  @Input()\n  get source(): SearchSource {\n    return this._source;\n  }\n  set source(value: SearchSource) {\n    this._source = value;\n    this.cdRef.detectChanges();\n  }\n\n  @Input() map: IgoMap;\n\n  @Input()\n  get feature(): Feature {\n    return this._feature;\n  }\n  set feature(value: Feature) {\n    this._feature = value;\n    this.cdRef.detectChanges();\n    this.selectFeature.emit();\n  }\n\n  @Input()\n  get mobile(): boolean {\n    return this._mobile;\n  }\n  set mobile(value: boolean) {\n    this._mobile = value;\n  }\n  private _mobile: boolean;\n\n  @Input()\n  get mapQueryClick(): boolean {\n    return this._mapQueryClick;\n  }\n  set mapQueryClick(value: boolean) {\n    this._mapQueryClick = value;\n  }\n  private _mapQueryClick: boolean;\n\n  private _feature: Feature;\n  private _source: SearchSource;\n  public featureTitle: string;\n\n  @Output() selectFeature = new EventEmitter<boolean>();\n\n  @Input()\n  matTooltipPosition: TooltipPosition;\n\n  public ready : boolean;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private networkService: NetworkService,\n    private languageService: LanguageService,\n    private configService: ConfigService,\n    private http: HttpClient,\n    private messageService: MessageService,\n  ) {\n    this.networkService.currentState().pipe(takeUntil(this.unsubscribe$)).subscribe((state: ConnectionState) => {\n      this.state = state;\n    });\n  }\n\n  ngOnInit() {\n    this.ready = true;\n  }\n\n  ngOnDestroy() {\n    this.mapQueryClick = false;\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  formatReading(reading: number): string {\n    return reading.toString().replace(\".\", \",\");\n  }\n\n  tooltipPosition(){\n    if (this.mobile) {\n      this.matTooltipPosition = 'above';\n    } else {\n      this.matTooltipPosition = 'right';\n    }\n  }\n\n    /**\n   * @internal\n   */\n    get title(): string {\n      return getEntityTitle(this.feature);\n    }\n\n  isObject(value) {\n    return typeof value === 'object';\n  }\n\n  isDoc(value) {\n    if (typeof value === 'string') {\n      if (this.isUrl(value)) {\n        const regex = /(pdf|docx?|xlsx?)$/;\n        return regex.test(value.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  }\n\n  isUrl(value) {\n    if (typeof value === 'string') {\n      const regex = /^https?:\\/\\//;\n      return regex.test(value);\n    }\n  }\n\n  isImg(value) {\n    if (typeof value ==='string') {\n      if (this.isUrl(value)) {\n        const regex = /(jpe?g|png|gif)$/;\n        return regex.test(value.toLowerCase());\n      } else {\n        return false;\n      }\n    }\n  }\n\n  isEmbeddedLink(value) {\n    if (typeof value === 'string') {\n        const matchRegex = /<a/g;\n        const match = value.match(matchRegex) || [];\n        const count = match.length;\n        if (count === 1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    return false;\n  }\n\nopenSecureUrl(value) {\n  let url: string;\n  const regexDepot = new RegExp(this.configService?.getConfig('depot.url') + '.*?(?=\"|$)');\n\n  if (regexDepot.test(value)) {\n    url = value.match(regexDepot)[0];\n\n    this.http.get(url, {\n      responseType: 'blob'\n    })\n    .subscribe((docOrImage) => {\n      const fileUrl = URL.createObjectURL(docOrImage);\n      window.open(fileUrl, '_blank');\n      this.cdRef.detectChanges();\n    },\n    (error: Error) => {\n      this.messageService.error('igo.geo.targetHtmlUrlUnauthorized', 'igo.geo.targetHtmlUrlUnauthorizedTitle');\n    });\n  } else {\n    let url = value;\n    if (this.isEmbeddedLink(value)) {\n      var div = document.createElement('div');\n      div.innerHTML = value;\n      url = div.children[0].getAttribute('href');\n    }\n    window.open(url, '_blank');\n  }\n}\n\ngetEmbeddedLinkText(value) {\n  const regex = /(?:>).*?(?=<|$)/;\n  let text = value.match(regex)[0] as string;\n  text = text.replace(/>/g, '');\n  return text;\n}\n\nfilterFeatureProperties(feature) {\n  const allowedFieldsAndAlias = feature.meta ? feature.meta.alias : undefined;\n  this.featureTitle = feature.meta ? feature.meta.title : undefined; // will define the feature info title in the panel\n  const properties = {};\n\n  if (feature.properties && feature.properties.Route) {\n    delete feature.properties.Route;\n  }\n\n  if (allowedFieldsAndAlias) {\n    Object.keys(allowedFieldsAndAlias).forEach(field => {\n      properties[allowedFieldsAndAlias[field]] = feature.properties[field];\n    });\n    return properties;\n    } else {\n      if (this.state.connection && feature.meta && feature.meta.excludeAttribute) {\n        const excludeAttribute = feature.meta.excludeAttribute;\n        excludeAttribute.forEach(attribute => {\n          delete feature.properties[attribute];\n        });\n      } else if (!this.state.connection && feature.meta && feature.meta.excludeAttributeOffline) {\n        const excludeAttributeOffline = feature.meta.excludeAttributeOffline;\n        excludeAttributeOffline.forEach(attribute => {\n          delete feature.properties[attribute];\n        });\n      }\n    }\n    return feature.properties;\n  }\n\n}\n","<ng-container\n  *ngIf= \"(store.entities$ | async)\"\n  class = \"featureInfo\"\n  (keydown)= \"handleKeyboardEvent($event)\">\n  <span class= \"title\">\n\n    <h4 color=\"primary\" (click)= \"onTitleClick()\" style=\"cursor:pointer;\">{{title}}</h4>\n\n    <button\n      class=\"clear-button\"\n      mat-icon-button\n      igoStopPropagation\n      (click)= \"clearButton()\"\n      [matTooltip]= \"('feature.close'| translate)\"\n      color=\"primary\">\n      <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n\n  </span>\n\n\n    <app-feature-details\n      *ngIf= \"resultSelected$.value && !customFeatureDetails\"\n      [mobile]= \"mobile\"\n      [feature]= \"resultSelected$.value.data\"\n      [mapQueryClick]= \"mapQueryClick\">\n    </app-feature-details>\n\n    <app-feature-details-custom\n      *ngIf= \"resultSelected$.value && customFeatureDetails \"\n      [mobile]= \"mobile\"\n      [feature]= \"resultSelected$.value.data\"\n      (mapQuery) =\"mapQueryFromFeatureDetails($event)\"\n      [mapQueryClick]= \"mapQueryClick\">\n    </app-feature-details-custom>\n\n</ng-container>","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n  EntityStore\n} from '@igo2/common';\nimport {\n  Feature,\n  SearchResult,\n  IgoMap,\n  FeatureMotion,\n  getCommonVectorStyle,\n  getCommonVectorSelectedStyle,\n  featuresAreOutOfView,\n  computeOlFeaturesExtent,\n  featureToOl\n} from '@igo2/geo';\nimport {\n  MediaService,\n  LanguageService,\n  StorageService,\n  ConfigService\n} from '@igo2/core';\nimport { QueryState, StorageState } from '@igo2/integration';\nimport { SearchState } from '../../search-results-tool/search.state';\n\n@Component({\n  selector: 'app-feature-info',\n  templateUrl: './feature-info.component.html',\n  styleUrls: ['./feature-info.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FeatureInfoComponent implements OnInit, OnDestroy {\n\n  get storageService(): StorageService {\n    return this.storageState.storageService;\n  }\n\n  @Input()\n  get map(): IgoMap {\n    return this._map;\n  }\n  set map(value: IgoMap) {\n    this._map = value;\n  }\n  private _map: IgoMap;\n\n  @Input()\n  get store(): EntityStore<SearchResult<Feature>> {\n    return this._store;\n  }\n  set store(value: EntityStore<SearchResult<Feature>>) {\n    this._store = value;\n  }\n  private _store: EntityStore<SearchResult<Feature>>;\n\n  @Output() closeQuery = new EventEmitter<boolean>();\n\n  @Input() mapQueryClick: boolean;\n\n  @Output() mapQuery = new EventEmitter<boolean>();\n\n  @Input() panelOpenState: boolean;\n\n  @Input() mobile: boolean;\n\n  @Output() panelOpened = new EventEmitter<boolean>();\n\n  private isResultSelected$ = new BehaviorSubject(false);\n  public isSelectedResultOutOfView$ = new BehaviorSubject(false);\n  private isSelectedResultOutOfView$$: Subscription;\n  private initialized = true;\n  public featureTitle: string;\n  public title: string;\n  public customFeatureTitle: boolean;\n  public customFeatureDetails: boolean;\n\n  @Input()\n  get feature(): Feature {\n    return this._feature;\n  }\n  set feature(value: Feature) {\n    this._feature = value;\n  }\n  private _feature: Feature;\n\n  private resultOrResolution$$: Subscription;\n\n  resultSelected$ = new BehaviorSubject<SearchResult<Feature>>(undefined);\n\n  @HostBinding('style.visibility')\n  get displayStyle() {\n    if (this.results.length) {\n      if (this.results.length === 1 && this.initialized) {\n        this.selectResult(this.results[0]);\n      }\n      return 'visible';\n    }\n    return 'hidden';\n  }\n\n  @HostListener('document:keydown.escape', ['$event']) onEscapeHandler(\n    event: KeyboardEvent\n  ) {\n    this.clearButton();\n  }\n\n  get results(): SearchResult<Feature>[] {\n    return this.store.all();\n  }\n\n  get searchStore(): EntityStore<SearchResult> {\n    return this.searchState.store;\n  }\n\n  @Input()\n  get mapQueryInit(): boolean { return this._mapQueryInit; }\n  set mapQueryInit(mapQueryInit: boolean) {\n    this._mapQueryInit = mapQueryInit;\n  }\n  private _mapQueryInit = false;\n\n  constructor(\n    public mediaService: MediaService,\n    public languageService: LanguageService,\n    private storageState: StorageState,\n    private queryState: QueryState,\n    private configService: ConfigService,\n    private searchState: SearchState\n  ) {\n    this.customFeatureTitle = this.configService.getConfig('customFeatureTitle') === undefined ? false :\n      this.configService.getConfig('customFeatureTitle');\n    this.customFeatureDetails = this.configService.getConfig('customFeatureDetails') === undefined ? false :\n      this.configService.getConfig('customFeatureDetails');\n  }\n\n  private monitorResultOutOfView() {\n    this.isSelectedResultOutOfView$$ = combineLatest([\n      this.map.viewController.state$,\n      this.resultSelected$\n    ])\n      .pipe(debounceTime(100))\n      .subscribe((bunch) => {\n        const selectedResult = bunch[1];\n        if (!selectedResult) {\n          this.isSelectedResultOutOfView$.next(false);\n          return;\n        }\n        const selectedOlFeature = featureToOl(selectedResult.data, this.map.projection);\n        const selectedOlFeatureExtent = computeOlFeaturesExtent(this.map, [selectedOlFeature]);\n        this.isSelectedResultOutOfView$.next(featuresAreOutOfView(this.map, selectedOlFeatureExtent));\n      });\n  }\n\n  ngOnInit() {\n    this.store.entities$.subscribe(() => {\n      this.initialized = true;\n    });\n    this.monitorResultOutOfView();\n  }\n\n  ngOnDestroy(): void {\n    this.clearButton();\n    if (this.resultOrResolution$$) {\n      this.resultOrResolution$$.unsubscribe();\n    }\n    if (this.isSelectedResultOutOfView$$) {\n      this.isSelectedResultOutOfView$$.unsubscribe();\n    }\n  }\n\n  onTitleClick(){\n    /// define your own function, ex zoom to feature\n    this.closeQuery.emit();\n  }\n\n  selectResult(result: SearchResult<Feature>) {\n    this.store.state.update(\n      result,\n      {\n        focused: true,\n        selected: true\n      },\n      true\n    );\n    this.resultSelected$.next(result);\n\n    const features = [];\n    for (const feature of this.store.all()) {\n      if (feature.meta.id === result.meta.id) {\n        feature.data.meta.style = getCommonVectorSelectedStyle(\n          Object.assign({}, { feature: feature.data },\n            this.queryState.queryOverlayStyleSelection));\n        feature.data.meta.style.setZIndex(2000);\n      } else {\n        feature.data.meta.style = getCommonVectorStyle(\n          Object.assign({},\n            { feature: feature.data },\n            this.queryState.queryOverlayStyle));\n      }\n      features.push(feature.data);\n      this.featureTitle = feature.meta.title; // will define the feature info title in the panel\n      this.getTitle();\n    }\n    this.map.queryResultsOverlay.removeFeatures(features);\n    this.map.queryResultsOverlay.addFeatures(features, FeatureMotion.None);\n\n    this.isResultSelected$.next(true);\n    this.initialized = false;\n  }\n\n  getTitle(){\n    this.title = this.customFeatureTitle? this.languageService.translate.instant('feature.title') : this.featureTitle;\n  }\n\n  public unselectResult() {\n    this.resultSelected$.next(undefined);\n    this.isResultSelected$.next(false);\n    this.store.state.clear();\n\n    const features = [];\n    for (const feature of this.store.all()) {\n      feature.data.meta.style = getCommonVectorStyle(\n        Object.assign({},\n          { feature: feature.data },\n          this.queryState.queryOverlayStyle));\n      features.push(feature.data);\n    }\n    this.map.queryResultsOverlay.setFeatures(features, FeatureMotion.None, 'map');\n  }\n\n  public clearButton() {\n    this.map.queryResultsOverlay.clear();\n    this.store.clear();\n    this.unselectResult();\n    this.mapQuery.emit(false);\n    this.panelOpened.emit(false);\n    this.closeQuery.emit();\n  }\n\n  mapQueryFromFeatureDetails(event) {\n    this.mapQuery.emit(event);\n  }\n\n}\n","<div id=\"sidepanel\" class=\"sidepanel\">\n  <mat-sidenav \n    #sidenav\n    mode=\"side\"\n    [autoFocus]=\"false\"\n    [(opened)]=\"panelOpenState\"\n    (closed)= \"closePanelLegend()\"\n    (closeLegend)=\"closePanelLegend()\">\n\n    <div #content class=\"app-sidenav-content\">\n\n      <div id=\"legend\" *ngIf=\"legendPanelOpened\" [mapQueryClick]=\"mapQueryClick\" [legendPanelOpened]=\"legendPanelOpened\" [panelOpenState]=\"panelOpenState\" >\n        <button\n          mat-icon-button\n          [matTooltip]=\"'legend.close' | translate\"\n          color=\"primary\"\n          (click)=\"closePanelLegend()\"><mat-icon svgIcon=\"close\"></mat-icon>\n        </button>\n        <h4 mat-dialog-title>{{ 'legend.title' | translate }}</h4>\n        <igo-layer-legend-list\n          [layers]=\"mapLayersShownInLegend\"\n          [excludeBaseLayers]=\"true\"\n          [allowShowAllLegends]=\"false\"\n          [updateLegendOnResolutionChange]=\"true\"\n          [showAllLegendsValue]=\"false\"\n          [layers]=\"layers\">\n        </igo-layer-legend-list>\n      </div>\n\n      <div style=\"margin: 24px;\" *ngIf=\"!searchInit && (queryStore.empty$ | async)===true && !legendPanelOpened\">\n        <section class=\"mat-typography\">\n          <h5><strong>{{ 'igo.integration.searchResultsTool.noResults' | translate }}</strong></h5>\n          <h6><strong>{{ 'igo.integration.searchResultsTool.doSearch' | translate }}</strong></h6>\n          <p [innerHTML]=\"'igo.integration.searchResultsTool.examples' | translate\"></p>\n      </section>\n      </div>\n\n      <div #getInfo *ngIf=\"mapQueryClick\">\n\n        <app-feature-info\n          [map]=\"map\"\n          [mobile]=\"mobile\"\n          [store]=\"queryStore\"\n          [mapQueryClick]=\"mapQueryClick\"\n          (closeQuery)=\"closePanelOnCloseQuery()\"\n          (clearSearchbarterm)=\"$event\"\n          (panelOpened)= \"panelOpenedFromFeature($event)\"\n          (mapQuery)= \"mapQueryFromFeature($event)\"\n          [title]=\"featureTitle\"\n          [hasFeatureEmphasisOnSelection]=\"hasFeatureEmphasisOnSelection\">\n        </app-feature-info>\n\n      </div>\n\n      <div #search *ngIf=\"searchInit\">\n        <app-search-results-tool \n          #searchresults\n          [showIcons]=\"true\"\n          placeholder=\"false\"\n          [mapQueryClick]=\"mapQueryClick\"\n          [legendPanelOpened]=\"legendPanelOpened\"\n          [panelOpenState]=\"panelOpenState\"\n          [searchInit]=\"searchInit\"\n          >\n        </app-search-results-tool>\n    </div></div>\n\n  </mat-sidenav>\n  <button\n    [ngClass]=\"sidenav.opened ? 'sidepanel-opened' : 'sidepanel-closed'\"\n    #sidenavbutton\n    mat-raised-button\n    color=\"primary\"\n    id=\"sidepanel-button\"\n    isRoundButton=false\n    isIconButton=true\n    MatDrawerMode=\"push\"\n    [matTooltip]=\"sidenav.opened ? ('sidePanel.close' | translate) : 'sidePanel.open' | translate\"\n    matTooltipPosition=\"after\"\n    (click)=\"sidenav.toggle()\">\n    <mat-icon\n      class=\"icon\"\n      [svgIcon]=\"sidenav.opened ? 'chevron-left' : 'chevron-right'\">\n    </mat-icon>\n  </button>\n</div>","import {\n  Component,\n  Input,\n  Output,\n  OnInit,\n  OnDestroy,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  HostListener,\n  ChangeDetectorRef\n} from '@angular/core';\n\nimport { EntityStore, ActionStore } from '@igo2/common';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport {\n  IgoMap,\n  FEATURE,\n  Feature,\n  FeatureMotion,\n  SearchResult,\n  Layer\n} from '@igo2/geo';\nimport { QueryState } from '@igo2/integration';\nimport { ConfigService } from '@igo2/core';\nimport { SearchState } from '../search-results-tool/search.state';\n\n@Component({\n  selector: 'app-sidepanel',\n  templateUrl: './sidepanel.component.html',\n  styleUrls: ['./sidepanel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidePanelComponent implements OnInit, OnDestroy {\n  title$: BehaviorSubject<string> = new BehaviorSubject<string>(undefined);\n\n  @Input()\n  get map(): IgoMap {\n    return this._map;\n  }\n  set map(value: IgoMap) {\n    this._map = value;\n  }\n  private _map: IgoMap;\n\n  @Input()\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    if (value === this._opened) {\n      return;\n    }\n\n    this._opened = value;\n    this.openedChange.emit(this._opened);\n  }\n  private _opened: boolean;\n\n  @Output() openedChange = new EventEmitter<boolean>();\n\n  @Input() mobile: boolean; // for tooltipPosition in featureDetails\n\n  @Input() mapQueryClick: boolean;\n\n  @Output() mapQuery = new EventEmitter<boolean>();\n\n  get queryStore(): EntityStore<SearchResult> {\n    return this.queryState.store;\n  }\n\n  @Output() selectFeature = new EventEmitter<boolean>();\n\n  @Input()\n  get feature(): Feature {\n    return this._feature;\n  }\n  set feature(value: Feature) {\n    this._feature = value;\n    this.cdRef.detectChanges();\n    this.selectFeature.emit();\n  }\n  private _feature: Feature;\n\n  public selectedFeature: Feature;\n  public hasFeatureEmphasisOnSelection: Boolean = true;\n\n  @Input() featureTitle: string;\n\n  @Input()\n  get searchInit(): boolean {\n    return this._searchInit;\n  }\n  set searchInit(value: boolean) {\n    this._searchInit = value;\n  }\n  private _searchInit: boolean;\n\n  public store = new ActionStore([]);\n\n  public lonlat;\n  public mapProjection: string;\n\n  public settingsChange$ = new BehaviorSubject<boolean>(undefined);\n\n  get searchStore(): EntityStore<SearchResult> {\n    return this.searchState.store;\n  }\n\n  @Input()\n  get layers(): Layer[] {\n    return this._layers;\n  }\n  set layers(value: Layer[]) {\n    this._layers = value;\n  }\n  private _layers: Layer[];\n\n  @Input()\n  get legendPanelOpened(): boolean {\n    return this._legendPanelOpened;\n  }\n  set legendPanelOpened(value: boolean) {\n    this._legendPanelOpened = value;\n  }\n  private _legendPanelOpened: boolean;\n\n  @Input() panelOpenState: boolean;\n\n  @Output() closeLegend = new EventEmitter<boolean>();\n  @Output() closeQuery = new EventEmitter<boolean>();\n  @Output() panelOpened = new EventEmitter<boolean>();\n\n  public mapLayersShownInLegend: Layer[];\n\n  constructor(\n    private configService: ConfigService,\n    private searchState: SearchState,\n    private queryState: QueryState,\n    private cdRef: ChangeDetectorRef\n    ) {\n    }\n\n    ngOnInit(){\n      this.queryStore.entities$ // clear the search when a mapQuery is initialised\n      .subscribe(\n        (entities) => {\n        if (entities.length > 0) {\n          this.mapQuery.emit(true);\n          this.legendPanelOpened = false;\n          this.panelOpened.emit(true);\n          this.clearSearch();\n        }\n        else {\n          this.closePanelOnCloseQuery();\n        }\n      });\n    }\n\n    @HostListener('change')\n    ngOnDestroy() {\n      this.store.destroy();\n      this.store.entities$.unsubscribe();\n      this.legendPanelOpened = false;\n      this.clearSearch();\n      this.clearQuery();\n      this.map.propertyChange$.unsubscribe;\n    }\n\n    isScrolledIntoView(elemSource, elem) {\n      const padding = 6;\n      const docViewTop = elemSource.scrollTop;\n      const docViewBottom = docViewTop + elemSource.clientHeight;\n      const elemTop = elem.offsetTop;\n      const elemBottom = elemTop + elem.clientHeight + padding;\n      return elemBottom <= docViewBottom && elemTop >= docViewTop;\n    }\n\n    /**\n     * Try to add a feature to the map when it's being focused\n     * @internal\n     * @param result A search result that could be a feature\n     */\n    onResultFocus(result: SearchResult) {\n      this.tryAddFeatureToMap(result);\n      this.selectedFeature = (result as SearchResult<Feature>).data;\n    }\n\n    /**\n     * Try to add a feature to the map overlay\n     * @param layer A search result that could be a feature\n     */\n    private tryAddFeatureToMap(layer: SearchResult) {\n      if (layer.meta.dataType !== FEATURE) {\n        return undefined;\n      }\n\n      // Somethimes features have no geometry. It happens with some GetFeatureInfo\n      if (layer.data.geometry === undefined) {\n        return;\n      }\n\n      this.map.searchResultsOverlay.setFeatures(\n        [layer.data] as Feature[],\n        FeatureMotion.Default\n      );\n\n      this.hasFeatureEmphasisOnSelection = this.configService.getConfig('hasFeatureEmphasisOnSelection');\n    }\n\n  /*\n   * Remove a feature to the map overlay\n   */\n  removeFeatureFromMap() {\n    this.map.searchResultsOverlay.clear();\n  }\n\n  closePanelOnCloseQuery(){\n    this.closeQuery.emit();\n    this.mapQuery.emit(false);\n    if (!this.searchInit && !this.legendPanelOpened){\n      this.panelOpened.emit(false);\n    } if (this.searchInit || this.legendPanelOpened) {\n      this.panelOpened.emit(true);\n    }\n  }\n\n  clearSearch() {\n    this.map.searchResultsOverlay.clear();\n    this.searchStore.clear();\n    this.searchState.setSelectedResult(undefined);\n    this.searchState.deactivateCustomFilterTermStrategy();\n    this.searchInit = false;\n    this.searchState.setSearchTerm('');\n  }\n\n  clearQuery(): void{\n    this.queryState.store.softClear();\n    this.queryState.store.clear();\n    this.mapQuery.emit(false);\n    this.removeFeatureFromMap();\n  }\n\n  closePanelLegend() { // this flushes the legend whenever a user closes the panel. if not, the user has to click twice on the legend button to open the legend with the button\n    this.legendPanelOpened = false;\n    this.closeLegend.emit();\n    this.map.propertyChange$.unsubscribe;\n  }\n\n  panelOpenedFromFeature(event) {\n    this.panelOpened.emit(event);\n  }\n\n  mapQueryFromFeature(event) {\n    this.mapQuery.emit(event);\n  }\n\n}\n\n","<div id=\"bottomPanelMobile\" >\n  <mat-expansion-panel \n    #bottompanel\n    [hideToggle]=\"false\"\n    (opened) =\"openPanel()\"\n    (closed)= \"closePanelLegend()\"\n    [expanded]= \"panelOpenState\"\n    (closeLegend)= \"closePanelLegend()\"\n    (keydown.Enter)= \"$event.stopPropagation()\"\n    (click)= \"$event.stopPropagation()\"\n    >\n    <mat-expansion-panel-header>\n      <igo-search-bar *ngIf= \"showSearchBar\"\n        #searchbar\n        (click)= \"onSearchBarClick($event)\"\n        (keydown.Enter)= \"$event.stopPropagation()\"\n        (keydown.Space)= \"$event.stopPropagation()\"\n        appearance=\"outline\"\n        [mobile]=\"mobile\"\n        searchIcon =\"magnify\"\n        [matTooltip]=\"'searchBar' | translate\"\n        matTooltipShowDelay=\"500\"\n        tooltip-position=\"after\"\n        [searchSettings]=\"false\"\n        color=\"primary\"\n        [term]= \"term\"\n        (searchTermChange)= \"onSearchTermChange($event)\"\n        [termSplitter]= \"termSplitter\"\n        [forceNA]= \"forceCoordsNA\"\n        [store]= \"searchStore\"\n        [pointerSummaryEnabled]= \"igoSearchPointerSummaryEnabled\"\n        (pointerSummaryStatus)= \"onPointerSummaryStatusChange($event)\"\n        [searchResultsGeometryEnabled]= \"searchResultsGeometryEnabled\"\n        (searchResultsGeometryStatus)= \"onSearchResultsGeometryStatusChange($event)\"\n        (clearFeature)= \"clearSearchBar($event)\"\n        (search)= \"onSearch($event)\">\n      </igo-search-bar>\n\n    </mat-expansion-panel-header>\n\n    <div id=\"legend\" [legendPanelOpened]= \"legendPanelOpened\" *ngIf= \"legendPanelOpened === true\">\n      <button\n        mat-icon-button\n        color=\"primary\"\n        [matTooltip]= \"'legend.close' | translate\"\n        (click)= \"closePanelLegend()\"><mat-icon svgIcon=\"close\"></mat-icon>\n      </button>\n      <h4 mat-dialog-title>{{ 'legend.title' | translate }}</h4>\n      <igo-layer-legend-list\n        [layers]= \"mapLayersShownInLegend\"\n        [excludeBaseLayers]=\"true\"\n        [allowShowAllLegends]=\"false\"\n        [updateLegendOnResolutionChange]=\"true\"\n        [showAllLegendsValue]=\"false\"\n        [layers]= \"layers\">\n      </igo-layer-legend-list>\n    </div>\n\n      <div style=\"margin: 20px;\" *ngIf= \"searchInit !== true && (queryStore.empty$ | async)===true && legendPanelOpened === false\">\n        <section class=\"mat-typography\">\n          <h5><strong>{{ 'igo.integration.searchResultsTool.noResults' | translate }}</strong></h5>\n          <h6><strong>{{ 'igo.integration.searchResultsTool.doSearch' | translate }}</strong></h6>\n          <p [innerHTML]= \"'igo.integration.searchResultsTool.examples' | translate\"></p>\n      </section>\n      </div>\n\n      <div #getInfo *ngIf= \"mapQueryClick === true\" >\n\n        <app-feature-info\n          [map]= \"map\"\n          [store]= \"queryStore\"\n          [mobile]= \"mobile\"\n          (closeQuery)= \"closePanelOnCloseQuery()\"\n          [mapQueryClick]= \"mapQueryClick\"\n          [panelOpenState]= \"panelOpenState\"\n          (panelOpened)= \"panelOpenedFromFeature($event)\"\n          (mapQuery)= \"mapQueryFromFeature($event)\"\n          >\n        </app-feature-info>\n\n      </div>\n\n      <div #search *ngIf=\" searchInit === true\" >\n\n        <igo-search-results\n          [store]= \"searchStore\"\n          [term]= \"term\"\n          [showIcons]= \"true\"\n          [termSplitter]= \"termSplitter\"\n          placeholder =\"false\"\n          (searchTermChange)= \"onSearchTermChange($event)\"\n          (featureSelected) =\"closePanel()\"\n          (resultFocus) =\"onResultFocus($event)\"\n          (resultSelect) =\"onResultFocus($event)\"\n          (moreResults)= \"onSearch($event)\"\n          [zoomAuto]= \"false\" >\n        </igo-search-results>\n\n        </div>\n\n  </mat-expansion-panel>\n</div>","import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  OnDestroy,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ElementRef\n} from '@angular/core';\n\nimport olFeature from 'ol/Feature';\nimport olPoint from 'ol/geom/Point';\n\nimport { StorageService } from '@igo2/core';\nimport { EntityStore, ActionStore } from '@igo2/common';\nimport { BehaviorSubject, Subscription, combineLatest, tap} from 'rxjs';\n\nimport {\n  IgoMap,\n  FEATURE,\n  Feature,\n  FeatureMotion,\n  MapService,\n  Research,\n  SearchResult,\n  SearchService,\n  Layer,\n  featureToOl,\n  featuresAreTooDeepInView,\n  featureFromOl,\n  getCommonVectorSelectedStyle,\n  getCommonVectorStyle\n} from '@igo2/geo';\nimport { MapState, QueryState, StorageState } from '@igo2/integration';\nimport { SearchState } from '../search-results-tool/search.state';\nimport { ConfigService } from '@igo2/core';\n\nimport type { default as OlGeometry } from 'ol/geom/Geometry';\n@Component({\n  selector: 'app-bottompanel',\n  templateUrl: './bottompanel.component.html',\n  styleUrls: ['./bottompanel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BottomPanelComponent implements OnInit, OnDestroy {\n\n  title$: BehaviorSubject<string> = new BehaviorSubject<string>(undefined);\n\n  @Input()\n  get legendPanelOpened(): boolean {\n    return this._legendPanelOpened;\n  }\n  set legendPanelOpened(value: boolean) {\n    this._legendPanelOpened = value;\n  }\n  private _legendPanelOpened: boolean;\n\n  @Output() closeLegend = new EventEmitter<boolean>();\n\n  @Input()\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  @Input() hideToggle = false;\n\n  @Input() mobile : boolean; // to pass the input to featureDetails tooltip\n\n  @Input() mapQueryClick : boolean;\n\n  @Output() mapQuery = new EventEmitter<boolean>();\n\n  get queryStore(): EntityStore<SearchResult> {\n    return this.queryState.store;\n  }\n\n  private focusedResult$: BehaviorSubject<SearchResult> = new BehaviorSubject(\n    undefined\n  );\n\n  resultSelected$ = new BehaviorSubject<SearchResult<Feature>>(undefined);\n\n  @Output() selectFeature = new EventEmitter<boolean>();\n\n  @Input()\n  get feature(): Feature {\n    return this._feature;\n  }\n  set feature(value: Feature) {\n    this._feature = value;\n    this.cdRef.detectChanges();\n    this.selectFeature.emit();\n  }\n  private _feature: Feature;\n\n  public selectedFeature: Feature;\n  public hasFeatureEmphasisOnSelection = false;\n\n  @Input()\n  get term(): string {\n    return this._term;\n  }\n  set term(value: string) {\n    this._term = value;\n    this.pageIterator = [];\n  }\n  public _term: string;\n\n  @Input()\n  get searchInit(): boolean {\n    return this._searchInit;\n  }\n  set searchInit(value: boolean) {\n    this._searchInit = value;\n  }\n  private _searchInit: boolean;\n\n  public store = new ActionStore([]);\n  public showSearchBar: boolean;\n  public igoSearchPointerSummaryEnabled: boolean = false;\n    get termSplitter(): string {\n    return this.searchState.searchTermSplitter$.value;\n  }\n  public forceCoordsNA: boolean = false;\n\n  public clearedSearchbar = false;\n\n  public lonlat;\n  public mapProjection: string;\n\n  get searchStore(): EntityStore<SearchResult> {\n    return this.searchState.store;\n  }\n\n  public pageIterator: {sourceId: string}[] = [];\n\n  get storageService(): StorageService {\n    return this.storageState.storageService;\n  }\n  private abstractFocusedResult: Feature;\n  private abstractSelectedResult: Feature;\n  public withZoomButton = false;\n\n  zoomAuto$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  get zoomAuto(): boolean {\n    return this._zoomAuto;\n  }\n  set zoomAuto(value) {\n    if (value !== !this._zoomAuto) {\n      return;\n    }\n    this._zoomAuto = value;\n    this.zoomAuto$.next(value);\n    this.storageService.set('zoomAuto', value);\n  }\n  private _zoomAuto = false;\n\n  private resultOrResolution$$: Subscription;\n\n  private shownResultsEmphasisGeometries: Feature[] = [];\n\n  @Input()\n  get layers(): Layer[] {\n    return this._layers;\n  }\n  set layers(value: Layer[]) {\n    this._layers = value;\n  }\n  private _layers: Layer[];\n\n  public mapLayersShownInLegend: Layer[];\n\n  @Input() panelOpenState: boolean;\n\n  @Output() panelOpened = new EventEmitter<boolean>();\n\n  @Output() closeQuery = new EventEmitter<boolean>();\n\n  constructor(\n    private configService: ConfigService,\n    private mapService: MapService,\n    private searchState: SearchState,\n    private searchService: SearchService,\n    private queryState: QueryState,\n    private cdRef: ChangeDetectorRef,\n    private mapState: MapState,\n    private storageState: StorageState,\n    private elRef: ElementRef\n    ) {\n      this.mapService.setMap(this.map);\n      this.showSearchBar = this.configService.getConfig('showSearchBar') === undefined ? true :\n      this.configService.getConfig('showSearchBar');\n      this.zoomAuto = this.storageService.get('zoomAuto') as boolean;\n    }\n\n  ngOnInit(){\n    this.closePanel();\n    this.forceCoordsNA = this.configService.getConfig('app.forceCoordsNA');\n\n    this.queryStore.entities$\n    .subscribe(\n      (entities) => {\n      if (entities.length > 0) {\n        this.openPanel();\n        this.mapQuery.emit(true);\n        this.clearSearch();\n        this.searchInit = false;\n      } else {\n        if (!this.legendPanelOpened && !this.searchInit){\n          this.closePanel();\n        }\n      }\n    });\n\n    this.map.propertyChange$.subscribe(() => {\n      this.mapLayersShownInLegend = this.map.layers.filter(layer => (\n        layer.showInLayerList !== false\n      ));\n    });\n\n    let latestResult;\n    let trigger;\n    if (this.hasFeatureEmphasisOnSelection) {\n      this.resultOrResolution$$ = combineLatest([\n        this.focusedResult$.pipe(\n          tap((res) => {\n            latestResult = res;\n            trigger = 'focused';\n          })\n        ),\n        this.resultSelected$.pipe(\n          tap((res) => {\n            latestResult = res;\n            trigger = 'selected';\n          })\n        ),\n        this.map.viewController.resolution$,\n        this.store.entities$\n      ]).subscribe(() => this.buildResultEmphasis(latestResult, trigger));\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.searchInit = false;\n    this.mapQuery.emit(false);\n    this.store.destroy();\n    this.store.entities$.unsubscribe();\n    this.map.propertyChange$.unsubscribe;\n    this.queryState.store.destroy();\n    this.clearSearch();\n  }\n\n  onPointerSummaryStatusChange(value) {\n    this.igoSearchPointerSummaryEnabled = value;\n  }\n\n  onSearchTermChange(term = '') {\n    this.term = term;\n    this.clearedSearchbar = false;\n    const termWithoutHashtag = term.replace(/(#[^\\s]*)/g, '').trim();\n\n    if (termWithoutHashtag.length < 2) {\n      this.searchStore.clear();\n      this.selectedFeature = undefined;\n      this.searchInit = false;\n      this.clearSearch();\n    } else {\n      if (this.mapQueryClick){\n        this.queryState.store.softClear();\n        this.mapQuery.emit(false);\n        this.searchInit = true;\n      }\n    }\n  }\n\n  onSearch(event: { research: Research; results: SearchResult[] }) {\n    this.openPanel();\n    if (this.mapQueryClick) { // to clear the mapQuery if a search is initialized\n      this.queryState.store.softClear();\n      this.map.queryResultsOverlay.clear();\n      this.mapQuery.emit(false);\n    }\n    this.legendPanelOpened = false;\n    this.queryState.store.softClear();\n    this.searchInit = true;\n    this.clearedSearchbar = false;\n    this.store.clear();\n    const results = event.results;\n    this.searchStore.state.updateAll({ focused: false, selected: false });\n    const newResults = this.searchStore.entities$.value\n      .filter((result: SearchResult) => result.source !== event.research.source)\n      .concat(results);\n    this.searchStore.updateMany(newResults);\n\n    setTimeout(() => {\n      const igoList = this.elRef.nativeElement.querySelector('igo-list');\n      let moreResults;\n      event.research.request.subscribe((source) => {\n        if (!source[0] || !source[0].source) {\n          moreResults = null;\n        } else if (source[0].source.getId() === 'icherche') {\n          moreResults = igoList.querySelector('.icherche .moreResults');\n        } else if (source[0].source.getId() === 'ilayer') {\n          moreResults = igoList.querySelector('.ilayer .moreResults');\n        } else if (source[0].source.getId() === 'nominatim') {\n          moreResults = igoList.querySelector('.nominatim .moreResults');\n        } else {\n          moreResults = igoList.querySelector('.' + source[0].source.getId() + ' .moreResults');\n        }\n        if (\n          moreResults !== null &&\n          !this.isScrolledIntoView(igoList, moreResults)\n        ) {\n          igoList.scrollTop =\n            moreResults.offsetTop +\n            moreResults.offsetHeight -\n            igoList.clientHeight;\n        }\n      });\n    }, 250);\n  }\n\n  isScrolledIntoView(elemSource, elem) {\n    const padding = 6;\n    const docViewTop = elemSource.scrollTop;\n    const docViewBottom = docViewTop + elemSource.clientHeight;\n\n    const elemTop = elem.offsetTop;\n    const elemBottom = elemTop + elem.clientHeight + padding;\n    return elemBottom <= docViewBottom && elemTop >= docViewTop;\n  }\n  /**\n   * Try to add a feature to the map when it's being focused\n   * @internal\n   * @param result A search result that could be a feature\n   */\n\n  onResultFocus(result: SearchResult) {\n    this.focusedResult$.next(result);\n    if (result.meta.dataType === FEATURE && result.data.geometry) {\n      result.data.meta.style = getCommonVectorSelectedStyle(\n        Object.assign({},\n          { feature: result.data as Feature | olFeature<OlGeometry> },\n          this.searchState.searchOverlayStyleFocus,\n          result.style?.focus ? result.style.focus : {}));\n\n      const feature = this.map.searchResultsOverlay.dataSource.ol.getFeatureById(result.meta.id);\n      if (feature) {\n        feature.setStyle(result.data.meta.style);\n        return;\n      }\n      this.map.searchResultsOverlay.addFeature(result.data as Feature, FeatureMotion.None);\n    }\n    this.tryAddFeatureToMap(result);\n    this.selectedFeature = (result as SearchResult<Feature>).data;\n    if (this.selectedFeature !== undefined ){\n      this.closePanel();\n    }\n  }\n\n  /**\n   * Try to add a feature to the map overlay\n   * @param layer A search result that could be a feature\n   */\n  private tryAddFeatureToMap(layer: SearchResult) {\n    if ( this.searchState.setSelectedResult !== undefined){\n      this.closePanel();\n    }\n    if (layer.meta.dataType !== FEATURE) {\n      return undefined;\n    }\n\n    // Somethimes features have no geometry. It happens with some GetFeatureInfo\n    if (layer.data.geometry === undefined) {\n      return;\n    }\n\n    this.map.searchResultsOverlay.setFeatures(\n      [layer.data] as Feature[],\n      FeatureMotion.Default\n    );\n    this.closePanel();\n    this.hasFeatureEmphasisOnSelection = this.configService.getConfig('hasFeatureEmphasisOnSelection');\n  }\n\n  /*\n   * Remove a feature to the map overlay\n   */\n  removeFeatureFromMap() {\n    this.map.searchResultsOverlay.clear();\n    this.closePanel();\n  }\n\n  onSearchCoordinate() {\n    this.searchStore.clear();\n    const results = this.searchService.reverseSearch(this.lonlat);\n\n    for (const i in results) {\n      if (results.length > 0) {\n        results[i].request.subscribe((_results: SearchResult<Feature>[]) => {\n          this.onSearch({ research: results[i], results: _results });\n        });\n      }\n    }\n  }\n\n  onSearchBarClick(event){ /// prevents panel to close on clear search\n    if (!this.panelOpenState && this.clearedSearchbar === false){\n      this.openPanel();\n    }\n    event.stopPropagation();\n  }\n\n  clearQuery(): void{\n    this.queryState.store.softClear();\n    this.queryState.store.clear();\n    this.mapQuery.emit(false);\n    this.removeFeatureFromMap();\n  }\n\n  closePanelOnCloseQuery(){\n    this.mapQuery.emit(false);\n    this.closeQuery.emit();\n    this.cdRef.detectChanges();\n    if (this.searchInit || this.legendPanelOpened) {\n      this.openPanel();\n    }\n  }\n\n  clearSearchBar(event){\n    this.searchInit = false;\n    this.clearSearch();\n    this.closePanel();\n    this.clearedSearchbar = true;\n    if (event){\n      event.stopPropagation(); //prevents panel toggling on click or focus\n    }\n  }\n\n  clearSearch() {\n    this.map.searchResultsOverlay.clear();\n    this.searchStore.clear();\n    this.searchState.setSelectedResult(undefined);\n    this.searchState.deactivateCustomFilterTermStrategy();\n    this.term=\"\";\n  }\n\n  closePanelLegend() { // this flushes the legend whenever a user closes the panel. if not, the user has to click twice on the legend button to open the legend with the button\n    this.legendPanelOpened = false;\n    this.closePanel();\n    this.closeLegend.emit();\n    this.map.propertyChange$.unsubscribe;\n  }\n\n  panelOpenedFromFeature(event) {\n    this.panelOpened.emit(event);\n  }\n\n  mapQueryFromFeature(event) {\n    this.mapQuery.emit(event);\n  }\n\n  closePanel(){\n    if (!this.searchInit && !this.mapQueryClick && !this.legendPanelOpened){\n      this.panelOpened.emit(false);\n    }\n  }\n\n  openPanel(){\n    this.panelOpened.emit(true);\n  }\n\n  private clearFeatureEmphasis(trigger: 'selected' | 'focused' | 'shown') {\n    if (trigger === 'focused' && this.abstractFocusedResult) {\n      this.map.searchResultsOverlay.removeFeature(this.abstractFocusedResult);\n      this.abstractFocusedResult = undefined;\n    }\n    if (trigger === 'selected' && this.abstractSelectedResult) {\n      this.map.searchResultsOverlay.removeFeature(this.abstractSelectedResult);\n      this.abstractSelectedResult = undefined;\n    }\n    if (trigger === 'shown') {\n      this.shownResultsEmphasisGeometries.map(shownResult => this.map.searchResultsOverlay.removeFeature(shownResult));\n      this.shownResultsEmphasisGeometries = [];\n    }\n  }\n\n  private buildResultEmphasis(\n    result: SearchResult<Feature>,\n    trigger: 'selected' | 'focused' | 'shown' | undefined\n  ) {\n    if (trigger !== 'shown') {\n      this.clearFeatureEmphasis(trigger);\n    }\n    if (!result || !result.data.geometry) {\n      return;\n    }\n    const myOlFeature = featureToOl(result.data, this.map.projection);\n    const olGeometry = myOlFeature.getGeometry();\n    if (featuresAreTooDeepInView(this.map, olGeometry.getExtent() as [number, number, number, number], 0.0025)) {\n      const extent = olGeometry.getExtent();\n      const x = extent[0] + (extent[2] - extent[0]) / 2;\n      const y = extent[1] + (extent[3] - extent[1]) / 2;\n      const feature1 = new olFeature({\n        name: `${trigger}AbstractResult'`,\n        geometry: new olPoint([x, y])\n      });\n      const abstractResult = featureFromOl(feature1, this.map.projection);\n\n      let computedStyle;\n      let zIndexOffset = 0;\n\n      switch (trigger) {\n        case 'focused':\n          computedStyle = getCommonVectorSelectedStyle(\n            Object.assign({},\n              { feature: abstractResult },\n              this.searchState.searchOverlayStyleFocus,\n              result.style?.focus ? result.style.focus : {}));\n          zIndexOffset = 2;\n          break;\n        case 'shown':\n          computedStyle = getCommonVectorStyle(Object.assign({},\n            { feature: abstractResult },\n            this.searchState.searchOverlayStyle,\n            result.style?.base ? result.style.base : {}));\n          break;\n        case 'selected':\n          computedStyle = getCommonVectorSelectedStyle(\n            Object.assign({},\n              { feature: abstractResult },\n              this.searchState.searchOverlayStyleSelection,\n              result.style?.selection ? result.style.selection : {}));\n          zIndexOffset = 1;\n          break;\n      }\n      abstractResult.meta.style = computedStyle;\n      abstractResult.meta.style.setZIndex(2000 + zIndexOffset);\n      this.map.searchResultsOverlay.addFeature(abstractResult, FeatureMotion.None);\n      if (trigger === 'focused') {\n        this.abstractFocusedResult = abstractResult;\n      }\n      if (trigger === 'selected') {\n        this.abstractSelectedResult = abstractResult;\n      }\n      if (trigger === 'shown') {\n        this.shownResultsEmphasisGeometries.push(abstractResult);\n      }\n    } else {\n      this.clearFeatureEmphasis(trigger);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogState } from '@angular/material/dialog';\nimport { IgoMap, Layer } from '@igo2/geo';\nimport { MapState } from '@igo2/integration';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-legend-dialog',\n  templateUrl: 'legend-dialog.component.html',\n  styleUrls: ['./legend-dialog.component.scss']\n})\nexport class LegendDialogComponent implements OnInit {\n\n  public getState: MatDialogState;\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get layers$(): Observable<Layer[]> {\n    return this.map.layers$;\n  }\n\n  public mapLayersShownInLegend: Layer[];\n\n  constructor(\n    private mapState: MapState\n  ) {}\n\n  ngOnInit() {\n    this.mapLayersShownInLegend = this.map.layers.filter(layer => (\n      layer.showInLayerList !== false\n    ));\n  }\n}\n","<div mat-dialog-actions><button mat-button mat-icon-button mat-dialog-close class=\"close\"><mat-icon svgIcon = \"close\"></mat-icon></button></div>\n<h4 mat-dialog-title>{{\"legend.title\" | translate}}</h4>\n\n<igo-layer-legend-list\n  [layers]=\"mapLayersShownInLegend\"\n  [excludeBaseLayers]=\"true\"\n  [allowShowAllLegends]=\"false\"\n  [updateLegendOnResolutionChange]=\"true\"\n  [showAllLegendsValue]=\"false\">\n</igo-layer-legend-list>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LanguageService } from '@igo2/core';\nimport { LegendDialogComponent } from '../legend-dialog/legend-dialog.component';\n\n@Component({\n  selector: 'app-legend-button',\n  templateUrl: './legend-button.component.html',\n  styleUrls: ['./legend-button.component.scss']\n})\nexport class LegendButtonComponent {\n\n  public dialogRef = null;\n\n  public legendButtonTooltip = this.languageService.translate.instant('legend.open');\n\n  @Output() toggleLegend = new EventEmitter<boolean>();\n\n  @Input() tooltipDisabled: boolean;\n\n  @Input() legendInPanel: boolean;\n\n  @Input() mobile: boolean;\n\n  constructor(public dialog: MatDialog, protected languageService: LanguageService) { }\n\n  toggleLegendButton(): void {\n    if (!this.legendInPanel && !this.mobile){\n      const dialogOpened = this.dialog.getDialogById('legend-dialog-container');\n      if (!dialogOpened) {\n        this.legendButtonTooltip = this.languageService.translate.instant('legend.close');\n        this.dialogRef = this.dialog.open(LegendDialogComponent, {\n          id: 'legend-dialog-container',\n          hasBackdrop: false,\n          closeOnNavigation: true\n        });\n      } else {\n        this.legendButtonTooltip = this.languageService.translate.instant('legend.open');\n        this.dialogRef.close();\n      }\n    }\n      this.toggleLegend.emit();\n  }\n}\n","<button\n    id=\"legend-button\"\n    mat-raised-button\n    (click)=\"toggleLegendButton()\"\n    [matTooltip]=\"legendButtonTooltip\"\n    [matTooltipDisabled]=\"tooltipDisabled\"\n    >\n    {{ 'legend.button' | translate }}\n</button>\n","<mat-sidenav-container>\n  <mat-sidenav-content position=\"end\">\n\n    <igo-backdrop\n      [shown]=\"false\"\n      (click)=\"onBackdropClick()\">\n    </igo-backdrop>\n\n    <div id=\"searchDesktop\" *ngIf=!mobile>\n\n      <igo-search-bar *ngIf=\"showSearchBar\"\n        #searchbar\n        (pointerSummaryStatus)=\"onPointerSummaryStatusChange($event)\"\n        appearance=\"outline\"\n        searchIcon =\"magnify\"\n        [matTooltip]=\"'searchBar' | translate\"\n        matTooltipShowDelay=\"500\"\n        tooltip-position=\"after\"\n        [searchSettings]=\"false\"\n        color=\"primary\"\n        [forceNA]=\"forceCoordsNA\"\n        [term]=\"searchBarTerm\"\n        [store]=\"searchStore\"\n        [termSplitter]=\"termSplitter\"\n        (searchTermChange)=\"onSearchTermChange($event)\"\n        (search)=\"onSearch($event)\"\n        (clearFeature)=\"clearSearch()\">\n      </igo-search-bar>\n\n      <div *ngIf=\"mobile\" id=\"scaleLine\"></div>\n\n      <app-sidepanel\n        #sidepanel\n        class=\"sidepanel\"\n        [map]=\"map\"\n        [mobile]=\"mobile\"\n        [(opened)]=\"panelOpenState\"\n        [searchInit]=\"searchInit\"\n        [store]=\"queryStore\"\n        [legendPanelOpened]=\"legendPanelOpened\"\n        [mapQueryClick]=\"mapQueryClick\"\n        [panelOpenState]=\"panelOpenState\"\n        (panelOpened)=\"panelOpened($event)\"\n        (toggleLegend)=\"togglePanelLegend()\"\n        (closeLegend)=\"closePanelLegend()\"\n        (closeQuery)=\"closePanelOnCloseQuery()\"\n        (openLegend)=\"openPanelLegend()\"\n        [layers]=\"mapLayersShownInLegend\">\n      </app-sidepanel>\n    </div>\n\n    <igo-map-browser      \n      igoMapOffline\n      #mapBrowser\n      igoMapContext\n      igoLayerContext\n      igoDropGeoFile\n      igoHoverFeature\n      [igoHoverFeatureEnabled]=\"true\"\n      igoQuery\n      [queryFeatures]=\"true\"\n      (query)=\"onMapQuery($event)\"\n      [igoHoverFeatureDelay]=10\n      [map]=\"map\"\n      (menuPosition)=\"onContextMenuOpen($event)\"\n      [ngClass]=\"{'igo-attribution-offset': map.getBaseLayers().length > 1, 'map-hasfooter': hasFooter}\">\n\n      <div *ngIf=\"mobile\" id=\"scaleLine\"></div>\n\n        <igo-baselayers-switcher\n          [ngClass]=\"mobile? ['igo-baselayers-switcher-mobile'] : (panelOpenState? ['baselayers-pushed'] : ['baselayers'])\"\n          [map]=\"map\"\n          [useStaticIcon]=\"getBaseLayersUseStaticIcon()\">\n        </igo-baselayers-switcher>\n\n        <div id=\"map-buttons\"\n        [ngClass]=\"mobile? ['map-buttons-mobile'] : ['map-buttons']\">\n          <igo-geolocate-button *ngIf=\"hasGeolocateButton\" [map]=\"map\" color=\"primary\"></igo-geolocate-button>\n          <igo-zoom-button [map]=\"map\" color=\"primary\"></igo-zoom-button>\n          <igo-rotation-button [showIfNoRotation]=\"showRotationButtonIfNoRotation\" [map]=\"map\" color=\"primary\"></igo-rotation-button>\n          <app-legend-button *ngIf= \"hasLegendButton\" (toggleLegend)= \"toggleLegend()\" [legendInPanel]= \"legendInPanel\" [tooltipDisabled]=\"mobile\" [legendButtonTooltip]=\"legendButtonTooltip\" color= \"primary\"></app-legend-button>\n        </div>\n\n        <app-bottompanel\n          *ngIf= \"mobile\"\n          [mobile]= \"mobile\"\n          [store]= \"searchStore\"\n          [searchInit]= \"searchInit\"\n          [mapQueryClick]= \"mapQueryClick\"\n          [legendPanelOpened]= \"legendPanelOpened\"\n          [panelOpenState]= \"panelOpenState\"\n          (panelOpened)= \"panelOpened($event)\"\n          (mapQuery)= \"mapQuery($event)\"\n          (closeQuery)= \"closePanelOnCloseQuery()\"\n          (closeLegend)= \"closePanelLegend()\"\n          (openLegend)= \"openPanelLegend()\"\n          (toggleLegend)= \"togglePanelLegend()\"\n          [layers]= \"mapLayersShownInLegend\">\n        </app-bottompanel>\n    </igo-map-browser>\n\n    <app-footer *ngIf=\"hasFooter && !mobile\" [mobile]=\"mobile\"></app-footer>\n\n    <app-map-overlay\n    [@controlStateX]=\"(mediaService.media$ | async) !== 'mobile' &&\n                            panelOpenState ? 'right' : 'left'\">\n    </app-map-overlay>\n\n  </mat-sidenav-content>\n\n</mat-sidenav-container>\n","import {\n  Component,\n  OnInit,\n  AfterContentInit,\n  OnDestroy,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Subscription, BehaviorSubject, of, skip } from 'rxjs';\nimport { debounceTime, take, skipWhile, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport * as olProj from 'ol/proj';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AuthOptions, AuthService } from '@igo2/auth';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { ObjectUtils } from '@igo2/utils';\n\nimport {\n  MediaService,\n  Media,\n  MediaOrientation,\n  ConfigService,\n  LanguageService,\n  MessageService,\n  StorageService,\n  AnalyticsService\n  } from '@igo2/core';\n\n  import {\n    ActionbarMode,\n    Workspace,\n    WorkspaceStore,\n    ActionStore,\n    EntityStore,\n    getEntityTitle,\n    EntityTablePaginatorOptions,\n    EntityRecord\n  } from '@igo2/common';\n\n  import { DetailedContext } from '@igo2/context';\n\n  import {\n  FEATURE,\n  Feature,\n  GoogleLinks,\n  LayerService,\n  Research,\n  SearchResult,\n  SearchSourceService,\n  CapabilitiesService,\n  sourceCanSearch,\n  sourceCanReverseSearch,\n  ImportService,\n  handleFileImportError,\n  handleFileImportSuccess,\n  WfsWorkspace,\n  generateIdFromSourceOptions,\n  computeOlFeaturesExtent,\n  ImageLayer,\n  VectorLayer,\n  MapExtent,\n  IgoMap,\n  DataSourceService,\n  SearchSource,\n  QuerySearchSource,\n  featureToSearchResult,\n  QueryService,\n  Layer,\n  MapService,\n  SearchBarComponent\n  } from '@igo2/geo';\n\nimport {\n  MapState,\n  WorkspaceState,\n  QueryState,\n  ContextState,\n  DirectionState\n} from '@igo2/integration';\n\nimport { SearchState } from './panels/search-results-tool/search.state';\n\nimport { PwaService } from '../../services/pwa.service';\n\nimport {\n  controlsAnimations, controlSlideX, controlSlideY\n} from './portal.animation';\nimport { MapBrowserEvent } from 'ol';\n\n@Component({\n  selector: 'app-portal',\n  templateUrl: './portal.component.html',\n  styleUrls: ['./portal.component.scss'],\n  animations: [\n    controlsAnimations(),\n    controlSlideX(),\n    controlSlideY()\n  ]\n})\n\nexport class PortalComponent implements OnInit, AfterContentInit, OnDestroy {\n  public showRotationButtonIfNoRotation: boolean = undefined;\n  public hasFooter: boolean = true;\n  public hasLegendButton: boolean = true;\n  public hasGeolocateButton: boolean = true;\n  public workspaceNotAvailableMessage: String = 'workspace.disabled.resolution';\n  public workspaceEntitySortChange$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private workspaceMaximize$$: Subscription[] = [];\n  readonly workspaceMaximize$: BehaviorSubject<boolean> = new BehaviorSubject(\n    this.storageService.get('workspaceMaximize') as boolean\n  );\n  public selectedWorkspace$: BehaviorSubject<Workspace> = new BehaviorSubject(undefined);;\n  public hasSideSearch = true;\n  public showSearchBar = true;\n  @ViewChild('mapBrowser', { read: ElementRef, static: true })\n  mapBrowser: ElementRef;\n  public legendPanelOpened = false;\n  public legendDialogOpened = false;\n  public settingsChange$ = new BehaviorSubject<boolean>(undefined);\n\n  getBaseLayersUseStaticIcon(): Boolean {\n    return this.configService.getConfig('useStaticIcon');\n  }\n  public hasHomeExtentButton = false;\n  public hasFeatureEmphasisOnSelection: Boolean = false;\n  public workspacePaginator: MatPaginator;\n  public workspaceSwitchDisabled = false;\n  public paginatorOptions: EntityTablePaginatorOptions = {\n    pageSize: 50, // Number of items to display on a page.\n    pageSizeOptions: [1, 5, 10, 20, 50, 100, 500] // The set of provided page size options to display to the user.\n  };\n  public workspaceMenuClass = 'workspace-menu';\n\n  public fullExtent = this.storageService.get('fullExtent') as boolean;\n\n  public matDialogRef$ = new BehaviorSubject<MatDialogRef<any>>(undefined);\n  public searchBarTerm = '';\n  public onSettingsChange$ = new BehaviorSubject<boolean>(undefined);\n  public termDefinedInUrl = false;\n  public termSplitter = '|';\n  public termDefinedInUrlTriggered = false;\n  private addedLayers$$: Subscription[] = [];\n  private layers$$: Subscription;\n  public forceCoordsNA = false;\n\n  public contextMenuStore = new ActionStore([]);\n  private contextMenuCoord: [number, number];\n\n  private contextLoaded = false;\n  private context$$: Subscription;\n  private openPanels$$: Subscription;\n  private sidenavMediaAndOrientation$$: Subscription;\n  private searchTerm$$: Subscription;\n\n  public igoSearchPointerSummaryEnabled: boolean;\n\n  private routeParams: Params;\n  public toastPanelHtmlDisplay = false;\n  public mobile: boolean;\n  public homeExtent: MapExtent;\n  public homeCenter: [number, number];\n  public homeZoom: number;\n  @ViewChild('searchbar') searchBar: SearchBarComponent;\n\n  public dialogOpened = this.dialog.getDialogById('legend-button-dialog-container');\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get auth(): AuthOptions {\n    return this.configService.getConfig('auth') || [];\n  }\n\n  isMobile(): boolean {\n    return this.mediaService.getMedia() === Media.Mobile;\n  }\n\n  isTablet(): boolean {\n    return this.mediaService.getMedia() === Media.Tablet;\n  }\n\n  isLandscape(): boolean {\n    return this.mediaService.getOrientation() === MediaOrientation.Landscape;\n  }\n\n  isPortrait(): boolean {\n    return this.mediaService.getOrientation() === MediaOrientation.Portrait;\n  }\n\n  public mobileBreakPoint: string = '(min-width: 768px)';\n  public Breakpoints = Breakpoints;\n  public currentBreakpoint: string = '';\n\n  get backdropShown(): boolean {\n    return (\n      ('(min-width: 768px)' &&\n      this.panelOpenState\n    ));\n  }\n\n  get expansionPanelExpanded(): boolean {\n    return this.workspaceState.workspacePanelExpanded;\n  }\n  set expansionPanelExpanded(value: boolean) {\n    this.workspaceState.workspacePanelExpanded = value;\n    if (value) {\n      this.map.viewController.setPadding({bottom: 280});\n    } else {\n      this.map.viewController.setPadding({bottom: 0});\n    }\n  }\n\n  get workspace(): Workspace {\n    return this.workspaceState.workspace$.value;\n  }\n\n  get actionbarMode(): ActionbarMode {\n    return ActionbarMode.Overlay;\n  }\n\n  get actionbarWithTitle(): boolean {\n    return this.actionbarMode === ActionbarMode.Overlay;\n  }\n\n  get searchStore(): EntityStore<SearchResult> {\n    return this.searchState.store;\n  }\n\n  get searchResultsGeometryEnabled(): boolean {\n    return this.searchState.searchResultsGeometryEnabled$.value;\n  }\n\n  get workspaceStore(): WorkspaceStore {\n    return this.workspaceState.store;\n  }\n\n  get queryStore(): EntityStore<SearchResult> { //FeatureInfo\n    return this.queryState.store;\n  }\n  public panelOpenState = false;\n  public mapQueryClick = false;\n  public searchInit = false;\n\n  public mapLayersShownInLegend: Layer[];\n  public legendInPanel: boolean;\n  public legendButtonTooltip = this.languageService.translate.instant('legend.open');\n\n  constructor(\n    private route: ActivatedRoute,\n    public workspaceState: WorkspaceState,\n    public authService: AuthService,\n    public mediaService: MediaService,\n    public layerService: LayerService,\n    public dataSourceService: DataSourceService,\n    public capabilitiesService: CapabilitiesService,\n    private contextState: ContextState,\n    private mapState: MapState,\n    private mapService: MapService,\n    private searchState: SearchState,\n    private queryState: QueryState,\n    private searchSourceService: SearchSourceService,\n    private configService: ConfigService,\n    private importService: ImportService,\n    private http: HttpClient,\n    private languageService: LanguageService,\n    private messageService: MessageService,\n    public dialogWindow: MatDialog,\n    private storageService: StorageService,\n    private directionState: DirectionState,\n    public dialog: MatDialog,\n    public queryService: QueryService,\n    private breakpointObserver: BreakpointObserver,\n    private pwaService: PwaService,\n    private analyticsService: AnalyticsService\n  ) {\n      this.hasFooter = this.configService.getConfig('hasFooter') === undefined ? false :\n        this.configService.getConfig('hasFooter');\n      this.hasLegendButton = this.configService.getConfig('hasLegendButton') === undefined ? false :\n        this.configService.getConfig('hasLegendButton');\n      this.hasSideSearch = this.configService.getConfig('hasSideSearch') === undefined ? true :\n        this.configService.getConfig('hasSideSearch');\n        this.showSearchBar = this.configService.getConfig('searchBar.showSearchBar') === undefined ? true :\n        this.configService.getConfig('searchBar.showSearchBar');\n      this.hasHomeExtentButton =\n        this.configService.getConfig('homeExtentButton') === undefined ? false : true;\n      this.hasGeolocateButton = this.configService.getConfig('hasGeolocateButton') === undefined ? true :\n        this.configService.getConfig('hasGeolocateButton');\n      this.showRotationButtonIfNoRotation = this.configService.getConfig('showRotationButtonIfNoRotation') === undefined ? false :\n        this.configService.getConfig('showRotationButtonIfNoRotation');\n      this.forceCoordsNA = this.configService.getConfig('app.forceCoordsNA');\n      this.hasFeatureEmphasisOnSelection = this.configService.getConfig('hasFeatureEmphasisOnSelection');\n      this.igoSearchPointerSummaryEnabled = this.configService.getConfig('hasSearchPointerSummary');\n      if (this.igoSearchPointerSummaryEnabled === undefined) {\n        this.igoSearchPointerSummaryEnabled = this.storageService.get('searchPointerSummaryEnabled') as boolean || false;\n      }\n      this.mobileBreakPoint = this.configService.getConfig('mobileBreakPoint') === undefined ? \"'(min-width: 768px)'\" :\n        this.configService.getConfig('mobileBreakPoint');\n      this.hasHomeExtentButton = this.configService.getConfig('homeExtentButton') === undefined ? false : true;\n      this.legendInPanel = this.configService.getConfig('legendInPanel') === undefined ? true :\n        this.configService.getConfig('legendInPanel');\n  }\n\n  ngOnInit() {\n    this.queryService.defaultFeatureCount = 1;\n    window['IGO'] = this;\n    this.hasGeolocateButton = this.configService.getConfig('hasGeolocateButton') === undefined ? true :\n      this.configService.getConfig('hasGeolocateButton');\n\n    this.map.ol.once('rendercomplete', () => {\n      this.readQueryParams();\n      if (this.configService.getConfig('geolocate.activateDefault') !== undefined) {\n        this.map.geolocationController.tracking = this.configService.getConfig('geolocate.activateDefault');\n      }\n\n    });\n\n    this.searchState.searchTermSplitter$.next(this.termSplitter);\n\n    this.authService.authenticate$.subscribe((authenticated) => {\n      this.contextLoaded = false;\n    });\n\n    this.route.queryParams.subscribe((params) => {\n      this.readLanguageParam(params);\n    });\n\n    this.context$$ = this.contextState.context$.subscribe(\n      (context: DetailedContext) => this.onChangeContext(context)\n    );\n\n    const contextActions = [{\n      id: 'coordinates',\n      title: 'coordinates',\n      handler: () => this.searchCoordinate(this.contextMenuCoord)\n    },\n    {\n      id: 'googleMaps',\n      title: 'googleMap',\n      handler: () => this.openGoogleMaps(this.contextMenuCoord)\n    },\n    {\n      id: 'googleStreetView',\n      title: 'googleStreetView',\n      handler: () => this.openGoogleStreetView(this.contextMenuCoord)\n    }];\n\n    this.contextMenuStore.load(contextActions);\n\n    this.searchState.selectedResult$.subscribe((result) => {\n      if (result && this.isMobile()) {\n        this.closePanels();\n      }\n    });\n\n    this.searchTerm$$ = this.searchState.searchTerm$.pipe(skip(1)).subscribe((searchTerm: string) => {\n      if (searchTerm !== undefined && searchTerm !== null) {\n        this.analyticsService.trackSearch(searchTerm, this.searchState.store.count);\n      }\n    });\n\n    this.queryService.defaultFeatureCount = 1;\n\n    this.queryStore.entities$\n    .subscribe(\n      (entities) => {\n      if (entities.length > 0) {\n        this.openPanelonQuery();\n      }\n    });\n\n    this.breakpoint$.subscribe(() =>\n    this.breakpointChanged()\n    );\n  }\n\n  ngAfterContentInit(): void {\n    this.map.viewController.setInitialState();\n  }\n\n  toggleDialogLegend(){\n    if (!this.legendDialogOpened) {\n      this.legendDialogOpened = true;\n    }\n  }\n\n  toggleLegend(){\n    if (this.legendInPanel || this.mobile){\n      if (!this.legendPanelOpened) {\n        this.legendButtonTooltip = this.languageService.translate.instant('legend.close');\n        this.openPanelLegend();\n        if (this.searchInit){\n          this.clearSearch();\n          this.openPanels();\n        }\n        if (this.mapQueryClick){\n          this.onClearQuery();\n          this.mapQueryClick = false;\n          this.openPanels();\n        }\n      } else {\n        this.legendButtonTooltip = this.languageService.translate.instant('legend.open');\n        this.closePanelLegend();\n      }\n    }\n    else {\n      if (!this.legendDialogOpened) {\n        this.legendDialogOpened = true;\n      }\n    }\n  }\n\n  panelOpened(event) {\n    this.panelOpenState = event;\n  }\n\n  mapQuery(event) {\n    this.mapQueryClick = event;\n  }\n\n  closePanelLegend(){\n    this.legendPanelOpened = false;\n    this.closePanels();\n    this.map.propertyChange$.unsubscribe;\n  }\n\n  openPanelLegend(){\n    this.legendPanelOpened = true;\n    this.openPanels();\n    this.map.propertyChange$.subscribe(() => {\n      this.mapLayersShownInLegend = this.map.layers.filter(layer => (\n        layer.showInLayerList !== false\n      ));\n    });\n  }\n\n  public breakpointChanged() {\n    if(this.breakpointObserver.isMatched('(min-width: 768px)')) {\n      this.currentBreakpoint = this.mobileBreakPoint;\n      this.mobile = false;\n    } else {\n      this.mobile = true;\n    }\n  }\n\n  readonly breakpoint$ = this.breakpointObserver\n  .observe(this.mobileBreakPoint)\n  .pipe(\n    tap(() => {}),\n    distinctUntilChanged()\n  );\n\n  /*\n  private initSW() {\n    const dataDownload = this.configService.getConfig('pwa.dataDownload');\n    if ('serviceWorker' in navigator && dataDownload) {\n      let downloadMessage;\n      let currentVersion;\n      const dataLoadSource = this.storageService.get('dataLoadSource');\n      navigator.serviceWorker.ready.then((registration) => {\n        console.log('Service Worker Ready');\n        this.http.get('ngsw.json').pipe(\n          concatMap((ngsw: any) => {\n            const datas$ = [];\n            let hasDataInDataDir: boolean = false;\n            if (ngsw) {\n              // IF FILE NOT IN THIS LIST... DELETE?\n              currentVersion = ngsw.appData.version;\n              const cachedDataVersion = this.storageService.get('cachedDataVersion');\n              if (currentVersion !== cachedDataVersion && dataLoadSource === 'pending') {\n                this.pwaService.updates.checkForUpdate();\n              }\n              if (dataLoadSource === 'newVersion' || !dataLoadSource) {\n                ((ngsw as any).assetGroups as any).map((assetGroup) => {\n                  if (assetGroup.name === 'contexts') {\n                    const elemToDownload = assetGroup.urls.concat(assetGroup.files).filter(f => f);\n                    elemToDownload.map((url, i) => datas$.push(this.http.get(url).pipe(delay(750))));\n                  }\n                });\n                if (hasDataInDataDir) {\n                  const message = this.languageService.translate.instant('pwa.data-download-start');\n                  downloadMessage = this.messageService\n                    .info(message, undefined, { disableTimeOut: true, progressBar: false, closeButton: true, tapToDismiss: false });\n                  this.storageService.set('cachedDataVersion', currentVersion);\n                }\n                return zip(...datas$);\n              }\n\n            }\n            return zip(...datas$);\n          })\n        )\n          .pipe(delay(1000))\n          .subscribe(() => {\n            if (downloadMessage) {\n              this.messageService.remove((downloadMessage as any).toastId);\n              const message = this.languageService.translate.instant('pwa.data-download-completed');\n              this.messageService.success(message, undefined, { timeOut: 40000 });\n              if (currentVersion) {\n                this.storageService.set('dataLoadSource', 'pending');\n                this.storageService.set('cachedDataVersion', currentVersion);\n              }\n            }\n          });\n\n      });\n    }\n  }*/\n\n  createFeatureProperties(layer: ImageLayer | VectorLayer) {\n    let properties = {};\n    layer.options.sourceOptions.sourceFields.forEach(field => {\n      if (!field.primary && field.visible) {\n        properties[field.name] = '';\n      }\n    });\n    return properties;\n  }\n\n  entitySortChange() {\n    this.workspaceEntitySortChange$.next(true);\n  }\n\n  ngOnDestroy() {\n    this.context$$.unsubscribe();\n    this.workspaceMaximize$$.map(f => f.unsubscribe());\n    this.layers$$?.unsubscribe();\n    this.searchTerm$$.unsubscribe();\n  }\n\n  private getQuerySearchSource(): SearchSource {\n    return this.searchSourceService\n      .getSources()\n      .find(\n        (searchSource: SearchSource) =>\n          searchSource instanceof QuerySearchSource\n      );\n  }\n\n  private getFeatureIsSameActiveWks(feature: Feature): boolean {\n    if (this.workspace) {\n      const featureTitle = feature.meta.sourceTitle;\n      const wksTitle = this.workspace.title;\n      if (wksTitle === featureTitle) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  private getWksActiveOpenInResolution(): boolean {\n    if(this.workspace) {\n      const activeWks = this.workspace as WfsWorkspace;\n      if(activeWks.active && activeWks.inResolutionRange$.value && this.workspaceState.workspacePanelExpanded) {\n        return true;\n      }\n    }\n    return false;\n   }\n\n  onMapQuery(event: { features: Feature[]; event: MapBrowserEvent<any> }) {\n    if(this.configService.getConfig('queryOnlyOne')){\n      event.features = [event.features[0]];\n      this.map.queryResultsOverlay.clear(); // to avoid double-selection in the map\n    }\n    const baseQuerySearchSource = this.getQuerySearchSource();\n    const querySearchSourceArray: QuerySearchSource[] = [];\n    if (event.features.length) {\n      if (this.searchInit) {this.clearSearch();}\n      this.clearSearchbarterm('');\n      if (this.mapQueryClick) {\n        this.onClearQuery();\n      }\n      this.openPanelonQuery();\n      const results = event.features.map((feature: Feature) => {\n        let querySearchSource = querySearchSourceArray.find(\n          (s) => s.title === feature.meta.sourceTitle\n        );\n        if (this.getFeatureIsSameActiveWks(feature)) {\n          if (this.getWksActiveOpenInResolution() && !(this.workspace as WfsWorkspace).getLayerWksOptionMapQuery()) {\n            return;\n          }\n        }\n        if (querySearchSource) {\n          this.onClearQuery();\n          this.openPanelonQuery();\n          this.mapQueryClick = true;\n        }\n        if (!querySearchSource) {\n          querySearchSource = new QuerySearchSource({\n            title: feature.meta.sourceTitle\n          });\n          querySearchSourceArray.push(querySearchSource);\n        }\n          return featureToSearchResult(feature, querySearchSource);\n      });\n      const filteredResults = results.filter(x => x !== undefined);\n      const research = {\n        request: of(filteredResults),\n        reverse: false,\n        source: baseQuerySearchSource\n      };\n      research.request.subscribe((queryResults: SearchResult<Feature>[]) => {\n        this.queryStore.load(queryResults);\n      });\n    } else {\n      this.mapQueryClick = false;\n      if (!this.searchInit && !this.legendPanelOpened && !this.mobile){ // in desktop keep legend opened if user clicks on the map\n        this.panelOpenState = false;\n      }\n      if (!this.searchInit && this.mobile){ // mobile mode, close legend when user click on the map\n        this.panelOpenState = false;\n      }\n    }\n  }\n\n  /**\n   * Cancel ongoing add layer, if any\n   */\n   private cancelOngoingAddLayer() {\n    this.addedLayers$$.forEach((sub: Subscription) => sub.unsubscribe());\n    this.addedLayers$$ = [];\n  }\n\n  onBackdropClick() {\n    this.closePanels();\n    this.mapQueryClick = false;\n  }\n\n  onSearchTermChange(term?: string) {\n    if(this.mobile) {this.panelOpenState = true;}\n    if (this.routeParams?.search && term !== this.routeParams.search) {\n      this.searchState.deactivateCustomFilterTermStrategy();\n    }\n\n    this.searchState.setSearchTerm(term);\n    const termWithoutHashtag = term.replace(/(#[^\\s]*)/g, '').trim();\n    if (termWithoutHashtag.length < 2) {\n      if(this.mobile) {this.panelOpenState = true;}\n      this.clearSearch();\n      return;\n    }\n    this.onBeforeSearch();\n  }\n\n  clearSearchbarterm(event){\n    if(!this.mobile){this.searchBar.setTerm('');}\n  }\n\n  onSearch(event: { research: Research; results: SearchResult[] }) {\n    this.searchInit = true;\n    this.legendPanelOpened = false;\n    this.panelOpenState = true;\n    if (this.mapQueryClick) {\n      this.onClearQuery();\n      this.mapQueryClick = false;\n      this.panelOpenState = true;\n    }\n    const results = event.results;\n\n    const isReverseSearch = !sourceCanSearch(event.research.source);\n\n    let enabledSources;\n    if (isReverseSearch) {\n      enabledSources = this.searchSourceService\n        .getEnabledSources()\n        .filter(sourceCanReverseSearch);\n    } else {\n      enabledSources = this.searchSourceService\n        .getEnabledSources()\n        .filter(sourceCanSearch);\n    }\n\n    const newResults = this.searchStore.entities$.value\n      .filter(\n        (result: SearchResult) =>\n          result.source !== event.research.source &&\n          enabledSources.includes(result.source)\n      )\n      .concat(results);\n    this.searchStore.updateMany(newResults);\n  }\n\n  private closePanels() {\n    if (!this.mapQueryClick && !this.searchInit && !this.legendPanelOpened){\n      this.panelOpenState = false;\n    }\n  }\n\n  private openPanels() {\n    this.panelOpenState = true;\n  }\n\n  private computeHomeExtentValues(context: DetailedContext) {\n    if (context?.map?.view?.homeExtent) {\n      this.homeExtent = context.map.view.homeExtent.extent;\n      this.homeCenter = context.map.view.homeExtent.center;\n      this.homeZoom = context.map.view.homeExtent.zoom;\n    } else {\n      this.homeExtent = undefined;\n      this.homeCenter = undefined;\n      this.homeZoom = undefined;\n    }\n\n  }\n\n  private onChangeContext(context: DetailedContext) {\n    this.cancelOngoingAddLayer();\n    if (context === undefined) {\n      return;\n    }\n    if (this.workspace && !this.workspace.entityStore.empty) {\n      this.workspace.entityStore.clear();\n    }\n    if (!this.queryState.store.empty) {\n      this.queryState.store.softClear();\n    }\n\n    this.computeHomeExtentValues(context);\n    this.route.queryParams.pipe(debounceTime(250)).subscribe((qParams) => {\n      if (!qParams['context'] || qParams['context'] === context.uri) {\n        this.readLayersQueryParams(qParams);\n      }\n    });\n\n    this.contextLoaded = true;\n  }\n\n  private onBeforeSearch() {\n    this.openPanels();\n  }\n\n  clearSearch() {\n    this.map.searchResultsOverlay.clear();\n    this.searchStore.clear();\n    this.searchState.setSelectedResult(undefined);\n    this.searchState.deactivateCustomFilterTermStrategy();\n    this.searchInit = false;\n    this.searchBarTerm = ''; // the searchbarterm doesn't clear up\n    this.searchState.setSearchTerm('');\n  }\n\n  closePanelOnCloseQuery(){\n    this.mapQueryClick = false;\n    if (this.searchInit || this.legendPanelOpened) {\n      this.openPanels(); // to prevent the panel to close when click searchbar after query\n    }\n  }\n\n  openPanelonQuery(){\n    this.mapQueryClick = true;\n    this.openPanels;\n    this.legendPanelOpened = false;\n    this.clearSearch();\n  }\n\n  onClearQuery(){\n    this.queryState.store.clear(); // clears the info panel\n    this.queryState.store.softClear(); // clears the info panel\n    this.map.queryResultsOverlay.clear(); // to avoid double-selection in the map\n  }\n\n  getTitle(result: SearchResult) {\n    return getEntityTitle(result);\n  }\n\n  onContextMenuOpen(event: { x: number; y: number }) {\n    this.contextMenuCoord = this.getClickCoordinate(event) as [number, number];\n  }\n\n  private getClickCoordinate(event: { x: number; y: number }) {\n    const contextmenuPoint = event;\n    const boundingMapBrowser = this.mapBrowser.nativeElement.getBoundingClientRect();\n    contextmenuPoint.y =\n      contextmenuPoint.y -\n      boundingMapBrowser.top +\n      (window.scrollY || window.pageYOffset);\n    contextmenuPoint.x =\n      contextmenuPoint.x -\n      boundingMapBrowser.left +\n      (window.scrollX || window.pageXOffset);\n    const pixel = [contextmenuPoint.x, contextmenuPoint.y];\n\n    const coord = this.map.ol.getCoordinateFromPixel(pixel);\n    const proj = this.map.projection;\n    return olProj.transform(coord, proj, 'EPSG:4326');\n  }\n\n  private openGoogleMaps(coord: [number, number]) {\n    window.open(GoogleLinks.getGoogleMapsCoordLink(coord[0], coord[1]));\n  }\n\n  private openGoogleStreetView(coord: [number, number]) {\n    window.open(GoogleLinks.getGoogleStreetViewLink(coord[0], coord[1]));\n  }\n\n  searchCoordinate(coord: [number, number]) {\n    this.searchBarTerm = coord.map((c) => c.toFixed(6)).join(', ');\n  }\n\n  onPointerSummaryStatusChange(value) {\n    this.storageService.set('searchPointerSummaryEnabled', value);\n    this.igoSearchPointerSummaryEnabled = value;\n  }\n\n  private readQueryParams() {\n    this.route.queryParams.subscribe((params) => {\n      this.routeParams = params;\n      this.readSearchParams();\n      this.readFocusFirst();\n      this.computeZoomToExtent();\n    });\n  }\n\n  private readLanguageParam(params) {\n    if (params['lang']) {\n      this.authService.languageForce = true;\n      this.languageService.setLanguage(params['lang']);\n    }\n  }\n\n  private computeZoomToExtent() {\n    if (this.routeParams['zoomExtent']) {\n      const extentParams = this.routeParams['zoomExtent'].split(',');\n      const olExtent = olProj.transformExtent(\n        extentParams,\n        'EPSG:4326',\n        this.map.projection\n      );\n      this.map.viewController.zoomToExtent(olExtent as [number, number, number, number]);\n    }\n  }\n\n  getControlsOffsetY() {\n    return this.expansionPanelExpanded ?\n      this.workspaceMaximize$.value ? 'firstRowFromBottom-expanded-maximized' : 'firstRowFromBottom-expanded' :\n      'firstRowFromBottom';\n  }\n\n  private computeFocusFirst() {\n    setTimeout(() => {\n      const resultItem: any = document\n        .getElementsByTagName('igo-search-results-item')\n        .item(0);\n      if (resultItem) {\n        resultItem.click();\n      }\n    }, 1);\n  }\n\n  private readFocusFirst() {\n    if (this.routeParams['sf'] === '1' && this.termDefinedInUrl) {\n      const entities$$ = this.searchStore.stateView.all$()\n        .pipe(\n          skipWhile((entities) => entities.length === 0),\n          debounceTime(1000),\n          take(1)\n        )\n        .subscribe((entities) => {\n          entities$$.unsubscribe();\n          if (entities.length && !this.termDefinedInUrlTriggered) {\n            this.computeFocusFirst();\n            this.termDefinedInUrlTriggered = true;\n          }\n        });\n    }\n  }\n\n  private readSearchParams() {\n    if (this.routeParams['search']) {\n      this.termDefinedInUrl = true;\n      if (this.routeParams['exactMatch'] === '1') {\n        this.searchState.activateCustomFilterTermStrategy();\n      }\n      if (this.routeParams['search'] && !this.routeParams['zoom'] && this.routeParams['sf'] !== '1') {\n        const entities$$ = this.searchStore.stateView.all$()\n          .pipe(\n            skipWhile((entities) => entities.length === 0),\n            debounceTime(500),\n            take(1)\n          )\n          .subscribe((entities) => {\n            entities$$.unsubscribe();\n            const searchResultsOlFeatures = entities\n              .filter(e => e.entity.meta.dataType === FEATURE)\n              .map((entity: EntityRecord<SearchResult>) =>\n                new olFormatGeoJSON().readFeature(entity.entity.data, {\n                  dataProjection: entity.entity.data.projection,\n                  featureProjection: this.map.projection\n                })\n              );\n            const totalExtent = computeOlFeaturesExtent(this.map, searchResultsOlFeatures);\n            this.map.viewController.zoomToExtent(totalExtent);\n          });\n      }\n      this.searchBarTerm = this.routeParams['search'];\n    }\n    if (this.routeParams['searchGeom'] === '1') {\n      this.searchState.searchResultsGeometryEnabled$.next(true);\n    }\n  }\n\n  private readLayersQueryParams(params: Params) {\n    this.readLayersQueryParamsByType(params, 'wms');\n    this.readLayersQueryParamsByType(params, 'wmts');\n    this.readLayersQueryParamsByType(params, 'arcgisrest');\n    this.readLayersQueryParamsByType(params, 'imagearcgisrest');\n    this.readLayersQueryParamsByType(params, 'tilearcgisrest');\n    this.readVectorQueryParams(params);\n  }\n\n  getQueryParam(name, url) {\n    let paramValue;\n    if (url.includes('?')) {\n      const httpParams = new HttpParams({ fromString: url.split('?')[1] });\n      paramValue = httpParams.get(name);\n    }\n    return paramValue;\n  }\n\n  private readLayersQueryParamsByType(params: Params, type) {\n    let nameParamLayersKey;\n    let urlsKey;\n    switch (type) {\n      case 'wms':\n        if ((params['layers'] || params['wmsLayers']) && params['wmsUrl']) {\n          urlsKey = 'wmsUrl';\n          nameParamLayersKey = params['wmsLayers'] ? 'wmsLayers' : 'layers'; // for maintain compatibility\n        }\n        break;\n      case 'wmts':\n        if (params['wmtsLayers'] && params['wmtsUrl']) {\n          urlsKey = 'wmtsUrl';\n          nameParamLayersKey = 'wmtsLayers';\n        }\n        break;\n      case 'arcgisrest':\n        if (params['arcgisLayers'] && params['arcgisUrl']) {\n          urlsKey = 'arcgisUrl';\n          nameParamLayersKey = 'arcgisLayers';\n        }\n        break;\n      case 'imagearcgisrest':\n        if (params['iarcgisLayers'] && params['iarcgisUrl']) {\n          urlsKey = 'iarcgisUrl';\n          nameParamLayersKey = 'iarcgisLayers';\n        }\n        break;\n      case 'tilearcgisrest':\n        if (params['tarcgisLayers'] && params['tarcgisUrl']) {\n          urlsKey = 'tarcgisUrl';\n          nameParamLayersKey = 'tarcgisLayers';\n        }\n        break;\n    }\n    if (!nameParamLayersKey || !urlsKey) {\n      return;\n    }\n    const layersByService = params[nameParamLayersKey].split('),(');\n    const urls = params[urlsKey].split(',');\n\n    let cnt = 0;\n    urls.forEach((urlSrc) => {\n      let url = urlSrc;\n      const version =\n        this.getQueryParam('VERSION', url) ||\n        this.getQueryParam('version', url) ||\n        undefined;\n      if (version) {\n        url = url.replace('VERSION=' + version, '').replace('version=' + version, '');\n      }\n\n      const currentLayersByService = this.extractLayersByService(\n        layersByService[cnt]\n      );\n      currentLayersByService.forEach((layer) => {\n        const layerFromUrl = layer.split(':igoz');\n        const layerOptions = ObjectUtils.removeUndefined({\n          type,\n          url: url,\n          layer: layerFromUrl[0],\n          params: type === 'wms' ? { LAYERS: layerFromUrl[0] } : undefined\n        });\n        const id = generateIdFromSourceOptions(layerOptions);\n        const visibility = this.computeLayerVisibilityFromUrl(params, id);\n        this.addLayerFromURL(\n          url,\n          layerFromUrl[0],\n          type,\n          version,\n          visibility,\n          layerFromUrl[1] ? parseInt(layerFromUrl[1], 10) : undefined\n        );\n      });\n      cnt += 1;\n    });\n  }\n\n  private readVectorQueryParams(params: Params) {\n    if (params['vector']) {\n      const url = params['vector'] as string;\n      const lastIndex = url.lastIndexOf('/');\n      const fileName = url.slice(lastIndex + 1, url.length);\n\n      this.http.get(`${url}`, { responseType: 'blob' }).subscribe((data) => {\n        const file = new File([data], fileName, {\n          type: data.type,\n          lastModified: Date.now()\n        });\n        this.importService.import(file).subscribe(\n          (features: Feature[]) => this.onFileImportSuccess(file, features),\n          (error: Error) => this.onFileImportError(file, error)\n        );\n      });\n    }\n  }\n\n  private onFileImportSuccess(file: File, features: Feature[]) {\n    handleFileImportSuccess(\n      file,\n      features,\n      this.map,\n      this.contextState.context$.value.uri,\n      this.messageService,\n      this.layerService\n    );\n  }\n\n  private onFileImportError(file: File, error: Error) {\n    handleFileImportError(\n      file,\n      error,\n      this.messageService\n    );\n  }\n\n  private extractLayersByService(layersByService: string): any[] {\n    let outLayersByService = layersByService;\n    outLayersByService = outLayersByService.startsWith('(')\n      ? outLayersByService.substr(1)\n      : outLayersByService;\n    outLayersByService = outLayersByService.endsWith(')')\n      ? outLayersByService.slice(0, -1)\n      : outLayersByService;\n    return outLayersByService.split(',');\n  }\n  private addLayerFromURL(\n    url: string,\n    name: string,\n    type: 'wms' | 'wmts' | 'arcgisrest' | 'imagearcgisrest' | 'tilearcgisrest',\n    version: string,\n    visibility: boolean = true,\n    zIndex: number\n  ) {\n    if (!this.contextLoaded) {\n      return;\n    }\n    const commonSourceOptions = {\n      optionsFromCapabilities: true,\n      optionsFromApi: true,\n      crossOrigin: true,\n      type,\n      url\n    };\n    const arcgisClause = (type === 'arcgisrest' || type === 'imagearcgisrest' || type === 'tilearcgisrest');\n    let sourceOptions = {\n      version: type === 'wmts' ? '1.0.0' : undefined,\n      queryable: arcgisClause ? true : false,\n      queryFormat: arcgisClause ? 'esrijson' : undefined,\n      layer: name\n    };\n    if (type === 'wms') {\n      sourceOptions = { params: { LAYERS: name, VERSION: version } } as any;\n    }\n\n    sourceOptions = ObjectUtils.removeUndefined(Object.assign({}, sourceOptions, commonSourceOptions));\n\n    this.addedLayers$$.push(\n      this.layerService\n        .createAsyncLayer({\n          zIndex: zIndex,\n          visible: visibility,\n          sourceOptions\n        })\n        .subscribe((l) => {\n          this.map.addLayer(l);\n        })\n    );\n  }\n\n  private computeLayerVisibilityFromUrl(\n    params: Params,\n    currentLayerid: string\n  ): boolean {\n    const queryParams = params;\n    let visible = true;\n    if (!queryParams || !currentLayerid) {\n      return visible;\n    }\n    let visibleOnLayersParams = '';\n    let visibleOffLayersParams = '';\n    let visiblelayers: string[] = [];\n    let invisiblelayers: string[] = [];\n    if (queryParams['visiblelayers']) {\n      visibleOnLayersParams = queryParams['visiblelayers'];\n    }\n    if (queryParams['invisiblelayers']) {\n      visibleOffLayersParams = queryParams['invisiblelayers'];\n    }\n\n    /* This order is important because to control whichever\n     the order of * param. First whe open and close everything.*/\n    if (visibleOnLayersParams === '*') {\n      visible = true;\n    }\n    if (visibleOffLayersParams === '*') {\n      visible = false;\n    }\n\n    // After, managing named layer by id (context.json OR id from datasource)\n    visiblelayers = visibleOnLayersParams.split(',');\n    invisiblelayers = visibleOffLayersParams.split(',');\n    if (visiblelayers.indexOf(currentLayerid) > -1 || visiblelayers.indexOf(currentLayerid.toString()) > -1) {\n      visible = true;\n    }\n    if (invisiblelayers.indexOf(currentLayerid) > -1 || invisiblelayers.indexOf(currentLayerid.toString()) > -1) {\n      visible = false;\n    }\n    return visible;\n  }\n\n}\n","import './portal.variables.scss';\r\n\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function controlSlideX(): AnimationTriggerMetadata {\r\n  return trigger('controlStateX', [\r\n    state(\r\n      'left',\r\n      style({\r\n        left: '60px'\r\n      })\r\n    ),\r\n    state(\r\n      'right',\r\n      style({\r\n        left: '465px'\r\n      })\r\n    ),\r\n    transition('* => *', animate('200ms'))\r\n  ]);\r\n}\r\n\r\nexport function controlSlideY(): AnimationTriggerMetadata {\r\n  return trigger('controlStateY', [\r\n    state('close', style({})),\r\n    state(\r\n      'firstRowFromBottom',\r\n      style({\r\n        bottom: '2px',\r\n        'margin-left': '0px'\r\n      })\r\n    ),\r\n    state(\r\n      'firstRowFromBottom-expanded',\r\n      style({\r\n        bottom: '285px',\r\n        'margin-left': '-55px'\r\n      })\r\n    ),\r\n    state(\r\n      'firstRowFromBottom-expanded-maximized',\r\n      style({\r\n        bottom: '500px', // workspace full size\r\n        'margin-left': '-55px'\r\n      })\r\n    ),\r\n    transition('* => *', animate('200ms'))\r\n  ]);\r\n}\r\n\r\nexport function controlsAnimations(): AnimationTriggerMetadata[] {\r\n  return [\r\n    trigger('controlsOffsetY', [\r\n      state('close', style({})),\r\n      state(\r\n        'firstRowFromBottom',\r\n        style({\r\n          bottom: '5px'\r\n        })\r\n      ),\r\n      state(\r\n        'firstRowFromBottom-expanded',\r\n        style({\r\n          bottom: '5px'\r\n        })\r\n      ),\r\n      state(\r\n        'firstRowFromBottom-expanded-maximized',\r\n        style({\r\n          bottom: '500px'\r\n        })\r\n      ),\r\n      state(\r\n        'secondRowFromBottom',\r\n        style({\r\n          bottom: '47px'\r\n        })\r\n      ),\r\n      state(\r\n        'thirdRowFromBottom',\r\n        style({\r\n          bottom: '104px'\r\n        })\r\n      ),\r\n      state(\r\n        '',\r\n        style({\r\n          bottom: 'calc(285px)'\r\n        })\r\n      ),\r\n      state(\r\n        'secondRowFromBottom-expanded',\r\n        style({\r\n          bottom: 'calc(285px + 52px)'\r\n        })\r\n      ),\r\n      state(\r\n        'thirdRowFromBottom-expanded',\r\n        style({\r\n          bottom: 'calc(285px + 104px)'\r\n        })\r\n      ),\r\n      transition('* => *', animate('200ms'))\r\n    ])\r\n  ];\r\n}\r\n","import { Component } from '@angular/core';\nimport { ConfigService } from '@igo2/core';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent {\n  public hasHeader = true;\n\n  constructor(private configService: ConfigService) {\n\n    this.hasHeader = this.configService.getConfig('header.hasHeader') === undefined ? false :\n      this.configService.getConfig('header.hasHeader');\n   }\n\n}\n","<app-portal \n    [ngClass]=\" hasHeader? 'portal-hasHeader-hasMenu' : 'portal-hasMenu' \">\n</app-portal>\n","import { HomeComponent } from '../menu-pages/home/home.component';\nimport { AboutComponent } from '../menu-pages/about/about.component';\nimport { MapComponent } from '../menu-pages/map/map.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent },\n    { path: 'carte', component: MapComponent },\n    { path: 'en-savoir-plus', component: AboutComponent }\n  ];\n\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {\n      onSameUrlNavigation: 'reload',\n      relativeLinkResolution: 'legacy'\n  })],\n    exports: [RouterModule],\n  })\n  export class MenuRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header.component';\nimport { IgoLanguageModule } from '@igo2/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MenuRoutingModule } from '../menu/menu-routing/menu-routing.module';\n\n@NgModule({\n  declarations: [\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    IgoLanguageModule,\n    MatToolbarModule,\n    MenuRoutingModule\n    ],\n  exports: [\n    HeaderComponent\n  ]\n})\nexport class HeaderModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FooterComponent } from './footer.component';\nimport { IgoLanguageModule } from '@igo2/core';\n\n@NgModule({\n  declarations: [\n    FooterComponent\n  ],\n  imports: [\n    CommonModule,\n    IgoLanguageModule\n  ],\n  exports: [\n    FooterComponent\n  ]\n})\nexport class FooterModule { }\n","import { LegendDialogComponent } from './legend-dialog.component';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { IgoMapModule, IgoLayerModule } from '@igo2/geo';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { IgoLanguageModule } from '@igo2/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [LegendDialogComponent],\n  imports: [\n    MatIconModule,\n    MatDialogModule,\n    IgoLayerModule,\n    IgoMapModule,\n    MatButtonModule,\n    MatTooltipModule,\n    IgoLanguageModule\n  ],\n  exports: [\n    LegendDialogComponent\n  ]\n})\nexport class LegendDialogModule { }\n","import { LegendButtonComponent } from './legend-button.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LegendDialogModule } from '../legend-dialog/legend-dialog.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { IgoMapModule, IgoLayerModule } from '@igo2/geo';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { IgoLanguageModule } from '@igo2/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [LegendButtonComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    IgoMapModule, IgoLayerModule,\n    MatTooltipModule,\n    IgoLanguageModule,\n    MatDialogModule,\n    LegendDialogModule\n  ],\n  exports: [LegendButtonComponent]\n})\nexport class LegendButtonModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { MapOverlayComponent } from './map-overlay.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [MapOverlayComponent],\n  declarations: [MapOverlayComponent]\n})\nexport class MapOverlayModule {}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoFlexibleModule, IgoCustomHtmlModule, IgoPanelModule } from '@igo2/common';\nimport {\n  IgoFeatureModule,\n  IgoSearchModule,\n  IgoFeatureDetailsModule\n} from '@igo2/geo';\n\nimport { SearchResultsToolComponent } from './search-results-tool.component';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatButtonModule,\n    IgoLanguageModule,\n    IgoFeatureModule,\n    IgoSearchModule,\n    IgoFlexibleModule,\n    IgoPanelModule,\n    IgoFeatureDetailsModule,\n    IgoCustomHtmlModule\n  ],\n  declarations: [SearchResultsToolComponent],\n  exports: [SearchResultsToolComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class IgoAppSearchResultsToolModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoKeyValueModule, IgoImageModule } from '@igo2/common';\nimport { RouterModule } from '@angular/router';\n\nimport { FeatureDetailsComponent } from './feature-details.component';\nimport { FeatureDetailsCustomComponent } from './feature-details-custom.component';\nimport { FeatureDetailsDirective } from './feature-details.directive';\n\n/**\n * @ignore\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    IgoLanguageModule,\n    IgoKeyValueModule,\n    RouterModule,\n    IgoImageModule,\n    MatTooltipModule\n  ],\n  exports: [\n    FeatureDetailsComponent,\n    FeatureDetailsCustomComponent,\n    FeatureDetailsDirective],\n  declarations: [\n    FeatureDetailsComponent,\n    FeatureDetailsCustomComponent,\n    FeatureDetailsDirective]\n})\nexport class IgoFeatureDetailsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IgoFeatureDetailsModule } from './feature-details/feature-details.module';\nimport { IgoFeatureFormModule } from '@igo2/geo';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    IgoFeatureDetailsModule,\n    IgoFeatureFormModule\n  ],\n  declarations: [],\n  providers: []\n})\nexport class IgoFeatureModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { IgoStopPropagationModule } from '@igo2/common';\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoSearchResultsModule } from '@igo2/geo';\nimport { IgoFeatureModule } from '../feature.module';\nimport { FeatureInfoComponent } from './feature-info.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    IgoLanguageModule,\n    IgoStopPropagationModule,\n    IgoFeatureModule,\n    IgoSearchResultsModule\n  ],\n  exports: [FeatureInfoComponent],\n  declarations: [FeatureInfoComponent]\n})\nexport class AppFeatureInfoModule {}\n","import { IgoAppSearchModule } from '@igo2/integration';\nimport { IgoAppSearchResultsToolModule } from './search-results-tool/search-results-tool.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {MatExpansionModule} from '@angular/material/expansion'; // mobile\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoMessageModule } from '@igo2/core';\nimport { AppFeatureInfoModule} from './feature/feature-info/feature-info.module';\nimport { IgoFeatureModule } from './feature/feature.module';\nimport { IgoFeatureDetailsModule} from './feature/feature-details/feature-details.module';\n\nimport {\n  IgoPanelModule,\n  IgoFlexibleModule,\n  IgoToolModule,\n  IgoActionbarModule,\n  IgoContextMenuModule\n} from '@igo2/common';\nimport {\n  IgoMapModule,\n  IgoSearchModule,\n  IgoLayerModule,\n  IgoSearchResultsModule\n} from '@igo2/geo';\nimport { IgoContextManagerModule } from '@igo2/context';\nimport { SidePanelComponent } from './sidepanel/sidepanel.component';\nimport { BottomPanelComponent } from './bottompanel/bottompanel.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatTooltipModule,\n    IgoLanguageModule,\n    IgoPanelModule,\n    IgoFlexibleModule,\n    IgoContextManagerModule,\n    IgoToolModule,\n    //SEARCH\n    MatCardModule,\n    IgoMessageModule,\n    IgoMapModule,\n    IgoSearchModule,\n    IgoActionbarModule,\n    IgoContextMenuModule,\n    IgoAppSearchModule,\n    IgoSearchModule.forRoot(),\n    IgoAppSearchResultsToolModule,\n    MatExpansionModule,\n    AppFeatureInfoModule,\n    IgoFeatureModule,\n    IgoFeatureDetailsModule,\n    IgoLayerModule,\n    IgoSearchResultsModule\n  ],\n  exports: [SidePanelComponent, BottomPanelComponent],\n  //SEARCH\n  declarations: [SidePanelComponent, BottomPanelComponent]\n})\nexport class AppPanelsModule {}\n","import { LegendButtonModule } from './legend-button/legend-button.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { LegendDialogModule} from './legend-dialog/legend-dialog.module';\nimport { IgoCoreModule } from '@igo2/core';\nimport {\n  IgoActionModule,\n  IgoWorkspaceModule,\n  IgoEntityModule,\n  IgoPanelModule,\n  IgoBackdropModule,\n  IgoFlexibleModule,\n  IgoContextMenuModule,\n  IgoToolModule,\n  IgoEntityTableModule,\n  IgoEntityTablePaginatorModule\n} from '@igo2/common';\n\nimport {\n  IgoGeoWorkspaceModule,\n  IgoFeatureModule,\n  IgoImportExportModule,\n  IgoMapModule,\n  IgoQueryModule,\n  IgoLayerModule,\n  IgoSearchModule\n} from '@igo2/geo';\nimport {\n  IgoContextManagerModule,\n  IgoContextMapButtonModule\n} from '@igo2/context';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { IgoAppSearchBarModule, IgoIntegrationModule } from '@igo2/integration';\nimport { MapOverlayModule } from './map-overlay/map-overlay.module';\n\nimport { PortalComponent } from './portal.component';\nimport { FooterModule } from './../footer/footer.module';\nimport { AppPanelsModule } from './panels/panels.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatIconModule,\n    IgoCoreModule,\n    IgoFeatureModule,\n    IgoMapModule,\n    IgoEntityModule,\n    IgoFlexibleModule,\n    IgoIntegrationModule,\n    IgoContextManagerModule,\n    FooterModule,\n    IgoLayerModule,\n    IgoWorkspaceModule,\n    IgoGeoWorkspaceModule,\n    IgoQueryModule.forRoot(),\n    IgoSearchModule.forRoot(),\n    IgoContextMapButtonModule,\n    MatDialogModule,\n    IgoActionModule,\n    IgoImportExportModule,\n    MapOverlayModule,\n    AppPanelsModule,\n    IgoPanelModule,\n    IgoBackdropModule,\n    IgoContextMenuModule,\n    IgoToolModule,\n    IgoEntityTableModule,\n    IgoEntityTablePaginatorModule,\n    LegendDialogModule,\n    MatSidenavModule,\n    IgoAppSearchBarModule,\n    IgoSearchModule,\n    LegendButtonModule\n  ],\n  exports: [PortalComponent],\n  declarations: [PortalComponent]\n})\nexport class PortalModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuComponent } from './menu.component';\nimport { HomeComponent } from './menu-pages/home/home.component';\nimport { MenuRoutingModule } from './menu-routing/menu-routing.module';\nimport { AboutComponent } from './menu-pages/about/about.component';\nimport { MapComponent } from './menu-pages/map/map.component';\nimport { HeaderModule } from '../header/header.module';\nimport { FooterModule } from '../footer/footer.module';\nimport { PortalModule } from '../portal';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n@NgModule({\n  declarations: [\n    MenuComponent,\n    HomeComponent,\n    AboutComponent,\n    MapComponent\n  ],\n  imports: [\n    CommonModule,\n    MenuRoutingModule,\n    PortalModule,\n    HeaderModule,\n    FooterModule,\n    MatToolbarModule\n  ],\n  exports:[\n    MenuComponent,\n    MenuRoutingModule\n  ]\n})\nexport class MenuModule { }\n","import { LanguageOptions } from '@igo2/core';\nimport {\n  Projection,\n  SearchSourceOptions,\n  CommonVectorStyleOptions\n} from '@igo2/geo';\n\nimport { AppOptions } from './environnement.interface';\ninterface Environment {\n  production: boolean;\n  igo: {\n    app: AppOptions,\n    language?: LanguageOptions;\n    projections?: Projection[];\n    searchSources?: { [key: string]: SearchSourceOptions };\n    queryOverlayStyle?: {\n      base?: CommonVectorStyleOptions,\n      selection?: CommonVectorStyleOptions,\n      focus?: CommonVectorStyleOptions\n    };\n    searchOverlayStyle?: {\n      base?: CommonVectorStyleOptions,\n      selection?: CommonVectorStyleOptions,\n      focus?: CommonVectorStyleOptions\n    };\n  };\n}\n\nexport const environment: Environment = {\n  production: true,\n  igo: {\n    app: {\n      forceCoordsNA: true,\n      install: {\n        enabled: true,\n        promote: true,\n        manifestPath: './config/github.webmanifest'\n      },\n      pwa: {\n        enabled: false,\n      }\n    },\n    language: {\n      prefix: ['./locale/']\n    },\n    searchSources: {\n      workspace: {\n        available: false,\n        enabled: false\n      },\n      nominatim: {\n        available: false\n      },\n      storedqueries: {\n        enabled: false,\n        available: false\n      },\n      icherche: {\n        searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/icherche/',\n        order: 2,\n        params: {\n          limit: '5'\n        },\n        settings:[],\n        showInPointerSummary: true\n      },\n      coordinatesreverse: {\n        showInPointerSummary: true\n      },\n      icherchereverse: {\n        showInPointerSummary: true,\n        searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/terrapi',\n        order: 3,\n        enabled: true\n      },\n      ilayer: {\n        enabled: false,\n        searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/icherche/layers',\n        order: 4,\n        params: {\n          limit: '3'\n        }\n      }\n    },\n    projections: [\n      {\n        code: 'EPSG:32198',\n        alias: 'Quebec Lambert',\n        def:\n          '+proj=lcc +lat_1=60 +lat_2=46 +lat_0=44 +lon_0=-68.5 +x_0=0 +y_0=0 \\\n          +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs',\n        extent: [-799574, 45802, 891595.4, 1849567.5]\n      },\n      {\n        code: 'EPSG:3798',\n        alias: 'MTQ Lambert',\n        def:\n          '+proj=lcc +lat_1=50 +lat_2=46 +lat_0=44 +lon_0=-70 +x_0=800000 +y_0=0 \\\n          +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs',\n        extent: [31796.5834, 158846.2231, 1813323.4284, 2141241.0978]\n      }\n    ]\n  }\n};\n","import { Component } from '@angular/core';\nimport { ConfigService, LanguageService } from '@igo2/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n  public headerLogo: string;\n  public headerLogoPrint: string;\n\n  constructor(\n    private configService: ConfigService,\n    protected languageService: LanguageService) {\n      this.computeHeader();\n    }\n\n  computeHeader() {\n    this.headerLogo = this.configService.getConfig('header.logo');\n    this.headerLogoPrint = this.configService.getConfig('header.logoPrint');\n  }\n\n  // Future translation system\n  /*changeLanguage() {\n    if (this.languageService.getLanguage() === 'fr'){\n      this.languageService.setLanguage('en');\n    } else {\n      this.languageService.setLanguage('fr');\n    }\n  }*/\n\n}\n","<mat-toolbar class = banner role = banner color=\"primary\">\n\t<div class=\"container\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-6 col-md-10 d-flex flex-wrap align-items-center zone-logo-title\">\n\t\t\t\t<a class=\"logo\" tabindex=\"5\" routerLink=\"\">\n                    <img id=\"header-logo\" alt=\"Logo\" src=\"{{headerLogo}}\">\n\t\t\t\t\t\n                </a>\n\t\t\t\t<img id=\"header-logo-print\" alt=\"Logo\" src=\"{{headerLogoPrint}}\" width=\"199\" height=\"60\" />\n\t\t\t\t<p lang=\"fr\" id=\"title-desktop\" class=\"zone-title  d-none d-md-block\">{{'header.title' | translate}}</p>\n\t\t\t</div>\n\t\t\t<div class=\"col-6 col-md-2 d-flex justify-content-end zone-links\">\n\t\t\t\t<ul class=\"nav flex-column\">\n\t\t\t\t\t<!--<li><button class=\"buttonLanguage\" disabled (click)=\"changeLanguage()\">{{'header.language'}}</button></li>-->\n\t\t\t\t\t<li><a rel=\"noopener noreferrer\" alt=\"('header.contactUsUrl' | translate)\" href=\"{{'header.contactUsUrl' | translate}}\" target=\"_blank\">{{'header.contactUs' | translate}}</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<p lang=\"fr\" id=\"title-mobile\" class=\"zone-title d-md-none col-12\"><a>{{'header.title' | translate}}</a></p>\n\t\t</div>\n\t</div>\n</mat-toolbar>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent {\n  public color = 'accent';\n\n  constructor() { }\n\n}\n","<mat-toolbar class=\"container headline\" color=\"accent\">\n  <div class=\"col-12 align-self-end\">\n    <nav class=\"navbar\">\n      <a class=\"nav-link nav-arrow left\" href=\"#menu-left\" routerLinkActive=\"active\">❮</a>\n      <div class=\"main-nav slick-track\">\n          <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\" id=\"menu-left\" [routerLinkActiveOptions]=\"{exact:true}\">Accueil</a>\n          <a class=\"nav-link\" routerLink=\"/carte\" routerLinkActive=\"active\">Carte</a>\n          <a class=\"nav-link\" routerLink=\"/en-savoir-plus\" id=\"menu-right\" routerLinkActive=\"active\">En savoir plus</a>\n      </div>\n      <a class=\"nav-link nav-arrow right\" color=\"accent\" href=\"#menu-right\" routerLinkActive=\"active\">❯</a>\n    </nav>\n  </div>\n</mat-toolbar>\n<router-outlet></router-outlet>\n","<igo-spinner igoSpinnerActivity></igo-spinner>\n\n<app-header *ngIf=\"hasHeader\" #header></app-header>\n\n<app-menu *ngIf=\"hasMenu\"></app-menu>\n\n<app-portal *ngIf=\"!hasMenu\" [ngClass]=\"hasHeader? 'portal-hasHeader': 'portal'\"></app-portal>","import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\nimport { Title, Meta } from '@angular/platform-browser';\nimport { userAgent } from '@igo2/utils';\nimport {\n  LanguageService,\n  ConfigService,\n  MessageService\n} from '@igo2/core';\nimport { AuthOptions } from '@igo2/auth';\nimport { PwaService } from './services/pwa.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public authConfig: AuthOptions;\n  private themeClass = 'qcca-theme';\n  public hasHeader: boolean = true;\n  public hasFooter: boolean = true;\n  private promptEvent: any;\n  public hasMenu: boolean = false;\n\n  @ViewChild('searchBar', { read: ElementRef, static: true })\n  searchBar: ElementRef;\n\n  constructor(\n    protected languageService: LanguageService,\n    private configService: ConfigService,\n    private renderer: Renderer2,\n    private titleService: Title,\n    private metaService: Meta,\n    private messageService: MessageService,\n    private pwaService: PwaService\n  ) {\n    this.readTitleConfig();\n    this.readThemeConfig();\n    this.readDescriptionConfig();\n\n    this.detectOldBrowser();\n\n    this.hasHeader = this.configService.getConfig('header.hasHeader') === undefined ? false :\n      this.configService.getConfig('header.hasHeader');\n\n    this.hasFooter = this.configService.getConfig('hasFooter') === undefined ? false :\n      this.configService.getConfig('hasFooter');\n\n    this.hasMenu = this.configService.getConfig('hasMenu') === undefined ? false :\n      this.configService.getConfig('hasMenu');\n\n    this.setManifest();\n    this.installPrompt();\n    this.pwaService.checkForUpdates();\n  }\n\n  private readTitleConfig() {\n    this.languageService.translate.get(this.configService.getConfig('title')).subscribe(title => {\n      if (title) {\n        this.titleService.setTitle(title);\n        this.metaService.addTag({ name: 'title', content: title });\n      }\n    });\n  }\n\n  private setManifest() {\n    const appConfig = this.configService.getConfig('app');\n    if (appConfig?.install?.enabled) {\n      const manifestPath = appConfig.install.manifestPath || 'manifest.webmanifest';\n      document.querySelector('#igoManifestByConfig').setAttribute('href', manifestPath);\n    }\n  }\n\n  private installPrompt() {\n    const appConfig = this.configService.getConfig('app');\n    if (appConfig?.install?.enabled && appConfig?.install?.promote) {\n      if (userAgent.getOSName() !== 'iOS') {\n        window.addEventListener('beforeinstallprompt', (event: any) => {\n          event.preventDefault();\n          this.promptEvent = event;\n          window.addEventListener('click', () => {\n            setTimeout(() => {\n              this.promptEvent.prompt();\n              this.promptEvent = undefined;\n            }, 750);\n          }, { once: true });\n        }, { once: true });\n      }\n    }\n  }\n\n  private readThemeConfig() {\n    const theme = this.configService.getConfig('theme') || this.themeClass;\n    if (theme) {\n      this.renderer.addClass(document.body, theme);\n    }\n  }\n\n  private readDescriptionConfig() {\n    const description = this.configService.getConfig('description');\n    if (description) {\n      this.metaService.addTag({ name: 'description', content: description });\n    }\n  }\n\n  private detectOldBrowser() {\n    const oldBrowser = userAgent.satisfies({\n      ie: '<=11',\n      chrome: '<64',\n      firefox: '<60',\n      safari: '<=11'\n    });\n\n    if (oldBrowser) {\n      this.messageService.alert('oldBrowser.message', 'oldBrowser.title', {\n        timeOut: 15000\n      });\n    }\n  }\n}\n","import { BrowserModule, HammerModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, ApplicationRef, Injector, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderModule } from './pages/header/header.module';\nimport { FooterModule } from './pages/footer/footer.module';\nimport { MenuModule } from './pages/menu/menu.module';\nimport {\n  provideConfigOptions,\n  IgoMessageModule,\n  IgoGestureModule,\n  RouteService,\n  LanguageService\n} from '@igo2/core';\nimport { IgoSpinnerModule, IgoStopPropagationModule } from '@igo2/common';\nimport {\n  provideIChercheSearchSource,\n  provideIChercheReverseSearchSource,\n  provideCoordinatesReverseSearchSource,\n  provideILayerSearchSource,\n  provideOptionsApi,\n  provideStyleListOptions,\n  provideWorkspaceSearchSource,\n  SearchService,\n  provideOsrmDirectionsSource,\n  provideNominatimSearchSource,\n  CoordinatesSearchResultFormatter,\n  provideDefaultCoordinatesSearchResultFormatter,\n  provideDefaultIChercheSearchResultFormatter,\n  provideSearchSourceService,\n  IChercheSearchSource\n} from '@igo2/geo';\n\n\nimport { environment } from '../environments/environment';\nimport { PortalModule } from './pages';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { MAT_TOOLTIP_DEFAULT_OPTIONS, MatTooltipDefaultOptions } from '@angular/material/tooltip';\nimport { concatMap, first } from 'rxjs';\n\nexport const defaultTooltipOptions: MatTooltipDefaultOptions = {\n  showDelay: 500,\n  hideDelay: 0,\n  touchendHideDelay: 0,\n  disableTooltipInteractivity: true\n};\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot([]),\n    IgoGestureModule.forRoot(),\n    IgoMessageModule,\n    IgoSpinnerModule,\n    IgoStopPropagationModule,\n    PortalModule,\n    HammerModule,\n    HeaderModule,\n    FooterModule,\n    MenuModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.igo.app.pwa.enabled,\n      registrationStrategy: 'registerWithDelay:5000'\n    })\n  ],\n  providers: [\n    provideConfigOptions({\n      default: environment.igo,\n      path: './config/config.json'\n    }),\n    provideCoordinatesReverseSearchSource(),\n    provideIChercheSearchSource(),\n    provideNominatimSearchSource(),\n    provideIChercheReverseSearchSource(),\n    provideILayerSearchSource(),\n    provideOsrmDirectionsSource(),\n    provideOptionsApi(),\n    CoordinatesSearchResultFormatter,\n    provideDefaultCoordinatesSearchResultFormatter(),\n    provideDefaultIChercheSearchResultFormatter(),\n    provideSearchSourceService(),\n    SearchService,\n    IChercheSearchSource,\n    provideStyleListOptions({\n      path: './assets/list-style.json'\n    }),\n    RouteService,\n    provideWorkspaceSearchSource(),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: appInitializerFactory,\n      deps: [Injector, ApplicationRef],\n      multi: true\n    },\n    provideStyleListOptions({\n      path: './assets/list-style.json'\n    }),\n    { provide: MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: defaultTooltipOptions }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nfunction appInitializerFactory(\n  injector: Injector,\n  applicationRef: ApplicationRef\n) {\n  // ensure to have the proper translations loaded once, whe the app is stable.\n  return () => new Promise<any>((resolve: any) => {\n    applicationRef.isStable.pipe(\n      first(isStable => isStable === true),\n      concatMap(() => {\n        const languageService = injector.get(LanguageService);\n        const lang = languageService.getLanguage();\n        return languageService.translate.getTranslation(lang);\n      }))\n      .subscribe((translations) => {\n        const languageService = injector.get(LanguageService);\n        const lang = languageService.getLanguage();\n        languageService.translate.setTranslation(lang, translations);\n        resolve();\n      });\n  });\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","var map = {\n\t\"./af\": 58685,\n\t\"./af.js\": 58685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 32614,\n\t\"./ar-kw.js\": 32614,\n\t\"./ar-ly\": 18630,\n\t\"./ar-ly.js\": 18630,\n\t\"./ar-ma\": 28674,\n\t\"./ar-ma.js\": 28674,\n\t\"./ar-sa\": 49032,\n\t\"./ar-sa.js\": 49032,\n\t\"./ar-tn\": 24730,\n\t\"./ar-tn.js\": 24730,\n\t\"./ar.js\": 254,\n\t\"./az\": 53052,\n\t\"./az.js\": 53052,\n\t\"./be\": 60150,\n\t\"./be.js\": 60150,\n\t\"./bg\": 63069,\n\t\"./bg.js\": 63069,\n\t\"./bm\": 13466,\n\t\"./bm.js\": 13466,\n\t\"./bn\": 18516,\n\t\"./bn-bd\": 90557,\n\t\"./bn-bd.js\": 90557,\n\t\"./bn.js\": 18516,\n\t\"./bo\": 26273,\n\t\"./bo.js\": 26273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 19815,\n\t\"./bs.js\": 19815,\n\t\"./ca\": 83331,\n\t\"./ca.js\": 83331,\n\t\"./cs\": 21320,\n\t\"./cs.js\": 21320,\n\t\"./cv\": 72219,\n\t\"./cv.js\": 72219,\n\t\"./cy\": 68266,\n\t\"./cy.js\": 68266,\n\t\"./da\": 66427,\n\t\"./da.js\": 66427,\n\t\"./de\": 67435,\n\t\"./de-at\": 52871,\n\t\"./de-at.js\": 52871,\n\t\"./de-ch\": 12994,\n\t\"./de-ch.js\": 12994,\n\t\"./de.js\": 67435,\n\t\"./dv\": 82357,\n\t\"./dv.js\": 82357,\n\t\"./el\": 95649,\n\t\"./el.js\": 95649,\n\t\"./en-au\": 59961,\n\t\"./en-au.js\": 59961,\n\t\"./en-ca\": 19878,\n\t\"./en-ca.js\": 19878,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 70864,\n\t\"./en-ie.js\": 70864,\n\t\"./en-il\": 91579,\n\t\"./en-il.js\": 91579,\n\t\"./en-in\": 30940,\n\t\"./en-in.js\": 30940,\n\t\"./en-nz\": 16181,\n\t\"./en-nz.js\": 16181,\n\t\"./en-sg\": 44301,\n\t\"./en-sg.js\": 44301,\n\t\"./eo\": 85291,\n\t\"./eo.js\": 85291,\n\t\"./es\": 54529,\n\t\"./es-do\": 53764,\n\t\"./es-do.js\": 53764,\n\t\"./es-mx\": 12584,\n\t\"./es-mx.js\": 12584,\n\t\"./es-us\": 63425,\n\t\"./es-us.js\": 63425,\n\t\"./es.js\": 54529,\n\t\"./et\": 35203,\n\t\"./et.js\": 35203,\n\t\"./eu\": 70678,\n\t\"./eu.js\": 70678,\n\t\"./fa\": 83483,\n\t\"./fa.js\": 83483,\n\t\"./fi\": 96262,\n\t\"./fi.js\": 96262,\n\t\"./fil\": 52521,\n\t\"./fil.js\": 52521,\n\t\"./fo\": 34555,\n\t\"./fo.js\": 34555,\n\t\"./fr\": 63131,\n\t\"./fr-ca\": 88239,\n\t\"./fr-ca.js\": 88239,\n\t\"./fr-ch\": 21702,\n\t\"./fr-ch.js\": 21702,\n\t\"./fr.js\": 63131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 23821,\n\t\"./ga.js\": 23821,\n\t\"./gd\": 71753,\n\t\"./gd.js\": 71753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 92762,\n\t\"./gom-deva.js\": 92762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 82809,\n\t\"./gu.js\": 82809,\n\t\"./he\": 45402,\n\t\"./he.js\": 45402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 10410,\n\t\"./hr.js\": 10410,\n\t\"./hu\": 38288,\n\t\"./hu.js\": 38288,\n\t\"./hy-am\": 67928,\n\t\"./hy-am.js\": 67928,\n\t\"./id\": 71334,\n\t\"./id.js\": 71334,\n\t\"./is\": 86959,\n\t\"./is.js\": 86959,\n\t\"./it\": 34864,\n\t\"./it-ch\": 51124,\n\t\"./it-ch.js\": 51124,\n\t\"./it.js\": 34864,\n\t\"./ja\": 36141,\n\t\"./ja.js\": 36141,\n\t\"./jv\": 29187,\n\t\"./jv.js\": 29187,\n\t\"./ka\": 42136,\n\t\"./ka.js\": 42136,\n\t\"./kk\": 94332,\n\t\"./kk.js\": 94332,\n\t\"./km\": 18607,\n\t\"./km.js\": 18607,\n\t\"./kn\": 84305,\n\t\"./kn.js\": 84305,\n\t\"./ko\": 70234,\n\t\"./ko.js\": 70234,\n\t\"./ku\": 16003,\n\t\"./ku.js\": 16003,\n\t\"./ky\": 75061,\n\t\"./ky.js\": 75061,\n\t\"./lb\": 32786,\n\t\"./lb.js\": 32786,\n\t\"./lo\": 66183,\n\t\"./lo.js\": 66183,\n\t\"./lt\": 50029,\n\t\"./lt.js\": 50029,\n\t\"./lv\": 24169,\n\t\"./lv.js\": 24169,\n\t\"./me\": 68577,\n\t\"./me.js\": 68577,\n\t\"./mi\": 68177,\n\t\"./mi.js\": 68177,\n\t\"./mk\": 50337,\n\t\"./mk.js\": 50337,\n\t\"./ml\": 65260,\n\t\"./ml.js\": 65260,\n\t\"./mn\": 52325,\n\t\"./mn.js\": 52325,\n\t\"./mr\": 14695,\n\t\"./mr.js\": 14695,\n\t\"./ms\": 75334,\n\t\"./ms-my\": 37151,\n\t\"./ms-my.js\": 37151,\n\t\"./ms.js\": 75334,\n\t\"./mt\": 63570,\n\t\"./mt.js\": 63570,\n\t\"./my\": 97963,\n\t\"./my.js\": 97963,\n\t\"./nb\": 88028,\n\t\"./nb.js\": 88028,\n\t\"./ne\": 86638,\n\t\"./ne.js\": 86638,\n\t\"./nl\": 50302,\n\t\"./nl-be\": 66782,\n\t\"./nl-be.js\": 66782,\n\t\"./nl.js\": 50302,\n\t\"./nn\": 33501,\n\t\"./nn.js\": 33501,\n\t\"./oc-lnc\": 50563,\n\t\"./oc-lnc.js\": 50563,\n\t\"./pa-in\": 50869,\n\t\"./pa-in.js\": 50869,\n\t\"./pl\": 65302,\n\t\"./pl.js\": 65302,\n\t\"./pt\": 49687,\n\t\"./pt-br\": 74884,\n\t\"./pt-br.js\": 74884,\n\t\"./pt.js\": 49687,\n\t\"./ro\": 79107,\n\t\"./ro.js\": 79107,\n\t\"./ru\": 33627,\n\t\"./ru.js\": 33627,\n\t\"./sd\": 30355,\n\t\"./sd.js\": 30355,\n\t\"./se\": 83427,\n\t\"./se.js\": 83427,\n\t\"./si\": 11848,\n\t\"./si.js\": 11848,\n\t\"./sk\": 54590,\n\t\"./sk.js\": 54590,\n\t\"./sl\": 20184,\n\t\"./sl.js\": 20184,\n\t\"./sq\": 56361,\n\t\"./sq.js\": 56361,\n\t\"./sr\": 78965,\n\t\"./sr-cyrl\": 81287,\n\t\"./sr-cyrl.js\": 81287,\n\t\"./sr.js\": 78965,\n\t\"./ss\": 25456,\n\t\"./ss.js\": 25456,\n\t\"./sv\": 70451,\n\t\"./sv.js\": 70451,\n\t\"./sw\": 77558,\n\t\"./sw.js\": 77558,\n\t\"./ta\": 51356,\n\t\"./ta.js\": 51356,\n\t\"./te\": 73693,\n\t\"./te.js\": 73693,\n\t\"./tet\": 21243,\n\t\"./tet.js\": 21243,\n\t\"./tg\": 42500,\n\t\"./tg.js\": 42500,\n\t\"./th\": 55768,\n\t\"./th.js\": 55768,\n\t\"./tk\": 77761,\n\t\"./tk.js\": 77761,\n\t\"./tl-ph\": 35780,\n\t\"./tl-ph.js\": 35780,\n\t\"./tlh\": 29590,\n\t\"./tlh.js\": 29590,\n\t\"./tr\": 33807,\n\t\"./tr.js\": 33807,\n\t\"./tzl\": 93857,\n\t\"./tzl.js\": 93857,\n\t\"./tzm\": 60654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 60654,\n\t\"./ug-cn\": 30845,\n\t\"./ug-cn.js\": 30845,\n\t\"./uk\": 19232,\n\t\"./uk.js\": 19232,\n\t\"./ur\": 47052,\n\t\"./ur.js\": 47052,\n\t\"./uz\": 77967,\n\t\"./uz-latn\": 32233,\n\t\"./uz-latn.js\": 32233,\n\t\"./uz.js\": 77967,\n\t\"./vi\": 98615,\n\t\"./vi.js\": 98615,\n\t\"./x-pseudo\": 12320,\n\t\"./x-pseudo.js\": 12320,\n\t\"./yo\": 31313,\n\t\"./yo.js\": 31313,\n\t\"./zh-cn\": 64490,\n\t\"./zh-cn.js\": 64490,\n\t\"./zh-hk\": 55910,\n\t\"./zh-hk.js\": 55910,\n\t\"./zh-mo\": 98262,\n\t\"./zh-mo.js\": 98262,\n\t\"./zh-tw\": 44223,\n\t\"./zh-tw.js\": 44223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"x_google_ignoreList":[53]}